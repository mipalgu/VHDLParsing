{"identifier":{"url":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"VHDLParsing"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ProcessBlock"}],"symbolKind":"struct","title":"ProcessBlock","externalID":"s:11VHDLParsing12ProcessBlockV","roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"ProcessBlock"}],"role":"symbol"},"hierarchy":{"paths":[["doc:\/\/VHDLParsing\/documentation\/VHDLParsing"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vhdlparsing\/processblock"]}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock\/init(rawValue:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock\/init(sensitivityList:code:)"],"title":"Initializers"},{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock\/code","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock\/rawValue","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock\/sensitivityList"],"title":"Instance Properties"},{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock\/Equatable-Implementations","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock\/RawRepresentable-Implementations"],"title":"Default Implementations","generated":true}],"schemaVersion":{"patch":0,"major":0,"minor":3},"seeAlsoSections":[{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousBlock","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousExpression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousStatement","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ComponentInstantiation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenerateBlock","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenericMap","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenericVariableMap","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/PortMap","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenBlock","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenStatement"],"title":"Asynchronous Blocks","generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ProcessBlock","kind":"identifier"}]}]}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/VHDLParsing\/Se","doc:\/\/VHDLParsing\/SE","doc:\/\/VHDLParsing\/SQ","doc:\/\/VHDLParsing\/SH","doc:\/\/VHDLParsing\/SY","doc:\/\/VHDLParsing\/s8SendableP"],"title":"Conforms To"}],"sections":[],"abstract":[{"text":"A struct for representing a process block.","type":"text"}],"references":{"doc://VHDLParsing/documentation/VHDLParsing/ForGenerate":{"kind":"symbol","abstract":[{"type":"text","text":"A generate expression utilising a "},{"code":"For","type":"codeVoice"},{"type":"text","text":" loop."}],"role":"symbol","navigatorTitle":[{"text":"ForGenerate","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForGenerate","kind":"identifier"}],"type":"topic","title":"ForGenerate","url":"\/documentation\/vhdlparsing\/forgenerate"},"doc://VHDLParsing/documentation/VHDLParsing/WhenElseStatement":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement","title":"WhenElseStatement","url":"\/documentation\/vhdlparsing\/whenelsestatement","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhenElseStatement"}],"navigatorTitle":[{"kind":"identifier","text":"WhenElseStatement"}],"abstract":[{"text":"A type for representing asynchronous ","type":"text"},{"type":"codeVoice","code":"when"},{"text":" statements with an ","type":"text"},{"type":"codeVoice","code":"else"},{"text":" clause.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/GenerateBlock":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenerateBlock","title":"GenerateBlock","url":"\/documentation\/vhdlparsing\/generateblock","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenerateBlock"}],"navigatorTitle":[{"kind":"identifier","text":"GenerateBlock"}],"abstract":[{"text":"A block that contains a generate statement.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/ProcessBlock/sensitivityList":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"sensitivityList"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing12VariableNameV","text":"VariableName"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"The sensitivity list of the process block."}],"url":"\/documentation\/vhdlparsing\/processblock\/sensitivitylist","kind":"symbol","role":"symbol","title":"sensitivityList","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock\/sensitivityList","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/ProcessBlock/RawRepresentable-Implementations":{"url":"\/documentation\/vhdlparsing\/processblock\/rawrepresentable-implementations","role":"collectionGroup","type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock\/RawRepresentable-Implementations","title":"RawRepresentable Implementations"},"doc://VHDLParsing/SE":{"title":"Swift.Encodable","identifier":"doc:\/\/VHDLParsing\/SE","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/ProcessBlock/rawValue":{"title":"rawValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock\/rawValue","url":"\/documentation\/vhdlparsing\/processblock\/rawvalue","type":"topic","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"VHDL"},{"type":"text","text":" representation of the process block."}],"kind":"symbol"},"doc://VHDLParsing/SY":{"title":"Swift.RawRepresentable","identifier":"doc:\/\/VHDLParsing\/SY","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/GenericVariableMap":{"title":"GenericVariableMap","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenericVariableMap","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericVariableMap"}],"abstract":[{"type":"text","text":"An operation that maps 2 generics together."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"GenericVariableMap"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/genericvariablemap","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/ProcessBlock/init(rawValue:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/vhdlparsing\/processblock\/init(rawvalue:)","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock\/init(rawValue:)","abstract":[{"text":"Creates a new process block from the given ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":" representation.","type":"text"}],"title":"init(rawValue:)","kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/ProcessBlock":{"kind":"symbol","abstract":[{"type":"text","text":"A struct for representing a process block."}],"role":"symbol","navigatorTitle":[{"text":"ProcessBlock","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ProcessBlock","kind":"identifier"}],"type":"topic","title":"ProcessBlock","url":"\/documentation\/vhdlparsing\/processblock"},"doc://VHDLParsing/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/VHDLParsing\/SH","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/AsynchronousBlock":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousBlock","title":"AsynchronousBlock","url":"\/documentation\/vhdlparsing\/asynchronousblock","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousBlock"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousBlock"}],"abstract":[{"text":"A block of code that exists within an architecture body.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/ProcessBlock/code":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"code","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SynchronousBlock","kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing16SynchronousBlockO"}],"title":"code","url":"\/documentation\/vhdlparsing\/processblock\/code","type":"topic","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock\/code","kind":"symbol","abstract":[{"type":"text","text":"The code within the process block."}],"role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/ProcessBlock/init(sensitivityList:code:)":{"role":"symbol","abstract":[{"type":"text","text":"Creates a new process block with the given sensitivity list and code."}],"url":"\/documentation\/vhdlparsing\/processblock\/init(sensitivitylist:code:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"sensitivityList"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing12VariableNameV","text":"VariableName"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"code"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing16SynchronousBlockO","text":"SynchronousBlock"},{"kind":"text","text":")"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock\/init(sensitivityList:code:)","title":"init(sensitivityList:code:)","kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/GenericMap":{"title":"GenericMap","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenericMap","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericMap"}],"abstract":[{"text":"A ","type":"text"},{"code":"generic map","type":"codeVoice"},{"text":" in ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":".","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"GenericMap"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/genericmap","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing":{"kind":"symbol","url":"\/documentation\/vhdlparsing","abstract":[],"role":"collection","title":"VHDLParsing","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/PortMap":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/PortMap","title":"PortMap","url":"\/documentation\/vhdlparsing\/portmap","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PortMap"}],"navigatorTitle":[{"kind":"identifier","text":"PortMap"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"port map"},{"text":" declaration in ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":".","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/AsynchronousExpression":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousExpression"}],"title":"AsynchronousExpression","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsynchronousExpression"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousExpression","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Expressions that can be used in asynchronous code."}],"url":"\/documentation\/vhdlparsing\/asynchronousexpression"},"doc://VHDLParsing/documentation/VHDLParsing/ComponentInstantiation":{"url":"\/documentation\/vhdlparsing\/componentinstantiation","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComponentInstantiation"}],"type":"topic","title":"ComponentInstantiation","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ComponentInstantiation"}],"abstract":[{"text":"A component instantiation in ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":".","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ComponentInstantiation","role":"symbol"},"doc://VHDLParsing/Se":{"title":"Swift.Decodable","identifier":"doc:\/\/VHDLParsing\/Se","type":"unresolvable"},"doc://VHDLParsing/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/VHDLParsing\/s8SendableP","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/WhenStatement":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenStatement","title":"WhenStatement","url":"\/documentation\/vhdlparsing\/whenstatement","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhenStatement"}],"navigatorTitle":[{"kind":"identifier","text":"WhenStatement"}],"abstract":[{"text":"An expression using a ","type":"text"},{"type":"codeVoice","code":"when"},{"text":" conditional.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/ProcessBlock/Equatable-Implementations":{"type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock\/Equatable-Implementations","role":"collectionGroup","title":"Equatable Implementations","url":"\/documentation\/vhdlparsing\/processblock\/equatable-implementations"},"doc://VHDLParsing/documentation/VHDLParsing/AsynchronousStatement":{"kind":"symbol","abstract":[{"type":"text","text":"A statement that can exist within asynchronous code."}],"role":"symbol","navigatorTitle":[{"text":"AsynchronousStatement","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousStatement","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousStatement","kind":"identifier"}],"type":"topic","title":"AsynchronousStatement","url":"\/documentation\/vhdlparsing\/asynchronousstatement"},"doc://VHDLParsing/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/VHDLParsing\/SQ","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/WhenBlock":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenBlock","title":"WhenBlock","url":"\/documentation\/vhdlparsing\/whenblock","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhenBlock"}],"navigatorTitle":[{"kind":"identifier","text":"WhenBlock"}],"abstract":[{"text":"A type for representing possible when statements.","type":"text"}],"kind":"symbol"}}}