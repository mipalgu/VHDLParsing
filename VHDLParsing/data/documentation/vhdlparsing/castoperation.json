{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation"},"topicSections":[{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/bit(expression:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/bitVector(expression:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/boolean(expression:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/integer(expression:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/natural(expression:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/positive(expression:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/real(expression:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/signed(expression:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/stdLogic(expression:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/stdLogicVector(expression:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/stdULogic(expression:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/stdULogicVector(expression:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/unsigned(expression:)"],"title":"Enumeration Cases"},{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/init(function:arguments:)"],"title":"Initializers"},{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/expression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/rawValue"],"title":"Instance Properties"},{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/Equatable-Implementations","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/FunctionCallable-Implementations","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/RawRepresentable-Implementations"],"title":"Default Implementations","generated":true}],"kind":"symbol","metadata":{"symbolKind":"enum","externalID":"s:11VHDLParsing13CastOperationO","title":"CastOperation","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CastOperation","kind":"identifier"}],"modules":[{"name":"VHDLParsing"}],"roleHeading":"Enumeration","role":"symbol","navigatorTitle":[{"text":"CastOperation","kind":"identifier"}]},"abstract":[{"text":"A cast operation converting an expression to a specific ","type":"text"},{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalType","type":"reference","isActive":true},{"text":".","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"seeAlsoSections":[{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BinaryOperation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ComparisonOperation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ConditionalExpression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CustomFunctionCall","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/DirectReference","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/EdgeCondition","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCall","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCallable","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedVector","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MathRealFunctionCalls","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Statement","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableAssignment","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableReference","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorIndex","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorSize"],"title":"Basic Arithmetic","generated":true}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CastOperation"}],"platforms":["Linux"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/vhdlparsing\/castoperation"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCallable","doc:\/\/VHDLParsing\/Se","doc:\/\/VHDLParsing\/SE","doc:\/\/VHDLParsing\/SQ","doc:\/\/VHDLParsing\/SH","doc:\/\/VHDLParsing\/SY","doc:\/\/VHDLParsing\/s8SendableP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/VHDLParsing\/documentation\/VHDLParsing"]]},"references":{"doc://VHDLParsing/documentation/VHDLParsing/EdgeCondition":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EdgeCondition","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"EdgeCondition","kind":"identifier"}],"type":"topic","title":"EdgeCondition","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/EdgeCondition","abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ConditionalExpression","isActive":true,"type":"reference"},{"text":" that checks for the presence of a clocks edge.","type":"text"}],"url":"\/documentation\/vhdlparsing\/edgecondition"},"doc://VHDLParsing/documentation/VHDLParsing/VectorIndex":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"VectorIndex"}],"title":"VectorIndex","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"VectorIndex"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorIndex","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An index of a vector in "},{"type":"codeVoice","code":"VHDL"},{"type":"text","text":"."}],"url":"\/documentation\/vhdlparsing\/vectorindex"},"doc://VHDLParsing/documentation/VHDLParsing/ComparisonOperation":{"title":"ComparisonOperation","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ComparisonOperation","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComparisonOperation"}],"abstract":[{"text":"A type for representing VHDL comparison operations.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ComparisonOperation"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/comparisonoperation","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/VariableMap":{"url":"\/documentation\/vhdlparsing\/variablemap","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"VariableMap","kind":"identifier"}],"type":"topic","title":"VariableMap","kind":"symbol","navigatorTitle":[{"text":"VariableMap","kind":"identifier"}],"abstract":[{"text":"An operation that maps 2 signals together.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap","role":"symbol"},"doc://VHDLParsing/SQ":{"identifier":"doc:\/\/VHDLParsing\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation/stdULogic(expression:)":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/stdULogic(expression:)","abstract":[{"text":"Convert to a ","type":"text"},{"code":"std_ulogic","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","title":"CastOperation.stdULogic(expression:)","url":"\/documentation\/vhdlparsing\/castoperation\/stdulogic(expression:)","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stdULogic","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expression"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11VHDLParsing10ExpressionO","kind":"typeIdentifier","text":"Expression"},{"kind":"text","text":")"}]},"doc://VHDLParsing/SY":{"identifier":"doc:\/\/VHDLParsing\/SY","title":"Swift.RawRepresentable","type":"unresolvable"},"doc://VHDLParsing/SH":{"identifier":"doc:\/\/VHDLParsing\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/VariableAssignment":{"title":"VariableAssignment","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableAssignment","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VariableAssignment","kind":"identifier"}],"abstract":[{"text":"A variable assignment exists within a port map and is used to assign a port to a variable.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"VariableAssignment","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/variableassignment","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/BinaryOperation":{"url":"\/documentation\/vhdlparsing\/binaryoperation","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"BinaryOperation","kind":"identifier"}],"type":"topic","title":"BinaryOperation","kind":"symbol","navigatorTitle":[{"text":"BinaryOperation","kind":"identifier"}],"abstract":[{"text":"A type for representing arithmetic operations that work with two operands.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BinaryOperation","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation/bitVector(expression:)":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/bitVector(expression:)","url":"\/documentation\/vhdlparsing\/castoperation\/bitvector(expression:)","title":"CastOperation.bitVector(expression:)","abstract":[{"text":"Convert to a ","type":"text"},{"type":"codeVoice","code":"bit_vector"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"bitVector"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expression"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Expression","preciseIdentifier":"s:11VHDLParsing10ExpressionO"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing":{"kind":"symbol","url":"\/documentation\/vhdlparsing","abstract":[],"role":"collection","title":"VHDLParsing","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation/stdLogic(expression:)":{"abstract":[{"text":"Convert to a ","type":"text"},{"code":"std_logic","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"stdLogic"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expression"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11VHDLParsing10ExpressionO","kind":"typeIdentifier","text":"Expression"},{"kind":"text","text":")"}],"url":"\/documentation\/vhdlparsing\/castoperation\/stdlogic(expression:)","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/stdLogic(expression:)","role":"symbol","title":"CastOperation.stdLogic(expression:)"},"doc://VHDLParsing/documentation/VHDLParsing/Expression":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Expression"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Expression"}],"type":"topic","title":"Expression","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression","abstract":[{"text":"An ","type":"text"},{"code":"Expression","type":"codeVoice"},{"text":" represents a stand-alone statement that resolves to some value in ","type":"text"},{"code":"VHDL","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/vhdlparsing\/expression"},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation/rawValue":{"type":"topic","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/rawValue","url":"\/documentation\/vhdlparsing\/castoperation\/rawvalue","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawValue"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"title":"rawValue","abstract":[{"text":"The ","type":"text"},{"code":"VHDL","type":"codeVoice"},{"text":" code performing the cast operation.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation/positive(expression:)":{"type":"topic","title":"CastOperation.positive(expression:)","abstract":[{"text":"Convert to a ","type":"text"},{"type":"codeVoice","code":"positive"},{"text":".","type":"text"}],"role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/positive(expression:)","url":"\/documentation\/vhdlparsing\/castoperation\/positive(expression:)","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"positive","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expression","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11VHDLParsing10ExpressionO","text":"Expression","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation/RawRepresentable-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","title":"RawRepresentable Implementations","url":"\/documentation\/vhdlparsing\/castoperation\/rawrepresentable-implementations","abstract":[],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/RawRepresentable-Implementations"},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation/natural(expression:)":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/natural(expression:)","title":"CastOperation.natural(expression:)","url":"\/documentation\/vhdlparsing\/castoperation\/natural(expression:)","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"natural","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expression","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11VHDLParsing10ExpressionO","text":"Expression","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Convert to a "},{"type":"codeVoice","code":"natural"},{"type":"text","text":"."}],"type":"topic","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation/FunctionCallable-Implementations":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/FunctionCallable-Implementations","title":"FunctionCallable Implementations","url":"\/documentation\/vhdlparsing\/castoperation\/functioncallable-implementations","kind":"article","abstract":[],"type":"topic","role":"collectionGroup"},"doc://VHDLParsing/documentation/VHDLParsing/FunctionCall":{"title":"FunctionCall","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCall","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"FunctionCall"}],"abstract":[{"text":"This type represents ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":" code that is enacting a function call.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FunctionCall"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/functioncall","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/CustomFunctionCall":{"title":"CustomFunctionCall","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CustomFunctionCall","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomFunctionCall"}],"abstract":[{"type":"text","text":"A custom function call."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CustomFunctionCall"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/customfunctioncall","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/FunctionCallable":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCallable","title":"FunctionCallable","url":"\/documentation\/vhdlparsing\/functioncallable","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FunctionCallable"}],"navigatorTitle":[{"kind":"identifier","text":"FunctionCallable"}],"abstract":[{"text":"Helper protocol for defining types that can be executed as a function call.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation/boolean(expression:)":{"abstract":[{"type":"text","text":"Convert to a "},{"type":"codeVoice","code":"boolean"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","url":"\/documentation\/vhdlparsing\/castoperation\/boolean(expression:)","title":"CastOperation.boolean(expression:)","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/boolean(expression:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"boolean","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expression","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Expression","preciseIdentifier":"s:11VHDLParsing10ExpressionO"},{"kind":"text","text":")"}]},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation":{"kind":"symbol","role":"symbol","url":"\/documentation\/vhdlparsing\/castoperation","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation","abstract":[{"text":"A cast operation converting an expression to a specific ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalType"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CastOperation"}],"type":"topic","title":"CastOperation","navigatorTitle":[{"kind":"identifier","text":"CastOperation"}]},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation/bit(expression:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"bit"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expression"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Expression","preciseIdentifier":"s:11VHDLParsing10ExpressionO"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol","title":"CastOperation.bit(expression:)","url":"\/documentation\/vhdlparsing\/castoperation\/bit(expression:)","abstract":[{"text":"Convert to a ","type":"text"},{"type":"codeVoice","code":"bit"},{"text":".","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/bit(expression:)"},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation/integer(expression:)":{"type":"topic","title":"CastOperation.integer(expression:)","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"integer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expression","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11VHDLParsing10ExpressionO","text":"Expression","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/integer(expression:)","abstract":[{"text":"Convert to an ","type":"text"},{"code":"integer","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/vhdlparsing\/castoperation\/integer(expression:)"},"doc://VHDLParsing/documentation/VHDLParsing/ConditionalExpression":{"url":"\/documentation\/vhdlparsing\/conditionalexpression","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConditionalExpression"}],"type":"topic","title":"ConditionalExpression","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ConditionalExpression"}],"abstract":[{"text":"A type for representing expression that can be used in a conditional statement.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ConditionalExpression","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation/signed(expression:)":{"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"signed","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expression","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Expression","kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing10ExpressionO"},{"text":")","kind":"text"}],"role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/signed(expression:)","url":"\/documentation\/vhdlparsing\/castoperation\/signed(expression:)","abstract":[{"text":"Convert to a ","type":"text"},{"type":"codeVoice","code":"signed"},{"text":".","type":"text"}],"type":"topic","title":"CastOperation.signed(expression:)"},"doc://VHDLParsing/SE":{"identifier":"doc:\/\/VHDLParsing\/SE","title":"Swift.Encodable","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/DirectReference":{"navigatorTitle":[{"kind":"identifier","text":"DirectReference"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/directreference","abstract":[{"type":"text","text":"A direct reference is a reference to a variable via it’s name or member access in a record type."}],"role":"symbol","title":"DirectReference","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DirectReference"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/DirectReference","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation/stdLogicVector(expression:)":{"title":"CastOperation.stdLogicVector(expression:)","url":"\/documentation\/vhdlparsing\/castoperation\/stdlogicvector(expression:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/stdLogicVector(expression:)","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stdLogicVector","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expression","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Expression","preciseIdentifier":"s:11VHDLParsing10ExpressionO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Convert to a ","type":"text"},{"code":"std_logic_vector","type":"codeVoice"},{"text":".","type":"text"}]},"doc://VHDLParsing/documentation/VHDLParsing/VariableReference":{"navigatorTitle":[{"text":"VariableReference","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/variablereference","abstract":[{"text":"A type for defining types of references to a variable.","type":"text"}],"role":"symbol","title":"VariableReference","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"VariableReference","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableReference","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation/expression":{"url":"\/documentation\/vhdlparsing\/castoperation\/expression","type":"topic","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/expression","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"expression","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11VHDLParsing10ExpressionO","text":"Expression","kind":"typeIdentifier"}],"role":"symbol","title":"expression","abstract":[{"text":"The expression that is being cast.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation/real(expression:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/real(expression:)","url":"\/documentation\/vhdlparsing\/castoperation\/real(expression:)","title":"CastOperation.real(expression:)","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"real","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expression","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Expression","kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing10ExpressionO"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Convert to a "},{"type":"codeVoice","code":"real"},{"type":"text","text":"."}]},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation/unsigned(expression:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"unsigned"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expression"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Expression","preciseIdentifier":"s:11VHDLParsing10ExpressionO"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol","title":"CastOperation.unsigned(expression:)","url":"\/documentation\/vhdlparsing\/castoperation\/unsigned(expression:)","abstract":[{"text":"Convert to an ","type":"text"},{"type":"codeVoice","code":"unsigned"},{"text":".","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/unsigned(expression:)"},"doc://VHDLParsing/Se":{"identifier":"doc:\/\/VHDLParsing\/Se","title":"Swift.Decodable","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/IndexedValue":{"navigatorTitle":[{"kind":"identifier","text":"IndexedValue"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/indexedvalue","abstract":[{"text":"This type represents a value for a specific index in a vector type within ","type":"text"},{"code":"VHDL","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","title":"IndexedValue","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IndexedValue"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/BooleanExpression":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BooleanExpression"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BooleanExpression"}],"type":"topic","title":"BooleanExpression","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression","abstract":[{"type":"text","text":"A boolean expression containing common boolean operations."}],"url":"\/documentation\/vhdlparsing\/booleanexpression"},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation/stdULogicVector(expression:)":{"title":"CastOperation.stdULogicVector(expression:)","type":"topic","abstract":[{"type":"text","text":"Convert to a "},{"type":"codeVoice","code":"std_ulogic_vector"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/castoperation\/stdulogicvector(expression:)","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"stdULogicVector"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expression"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11VHDLParsing10ExpressionO","kind":"typeIdentifier","text":"Expression"},{"kind":"text","text":")"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/stdULogicVector(expression:)"},"doc://VHDLParsing/documentation/VHDLParsing/VectorSize":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VectorSize","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"VectorSize","kind":"identifier"}],"type":"topic","title":"VectorSize","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorSize","abstract":[{"text":"A type for representing VHDL vector sizes.","type":"text"}],"url":"\/documentation\/vhdlparsing\/vectorsize"},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation/init(function:arguments:)":{"abstract":[{"text":"Creates a new ","type":"text"},{"isActive":true,"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation","type":"reference"},{"type":"text","text":" from the type casting to (as a string) and the expression that is to"},{"type":"text","text":" "},{"type":"text","text":"be casted."}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/init(function:arguments:)","role":"symbol","title":"init(function:arguments:)","url":"\/documentation\/vhdlparsing\/castoperation\/init(function:arguments:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"arguments","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Expression","preciseIdentifier":"s:11VHDLParsing10ExpressionO","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/MathRealFunctionCalls":{"url":"\/documentation\/vhdlparsing\/mathrealfunctioncalls","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MathRealFunctionCalls"}],"type":"topic","title":"MathRealFunctionCalls","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MathRealFunctionCalls"}],"abstract":[{"text":"A function call where the function being called exists within the ","type":"text"},{"type":"codeVoice","code":"math_real"},{"text":" package.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MathRealFunctionCalls","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/SignalType":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"SignalType","kind":"identifier"}],"title":"SignalType","kind":"symbol","navigatorTitle":[{"text":"SignalType","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalType","role":"symbol","type":"topic","abstract":[{"text":"Valid VHDL Signal types.","type":"text"}],"url":"\/documentation\/vhdlparsing\/signaltype"},"doc://VHDLParsing/documentation/VHDLParsing/IndexedVector":{"title":"IndexedVector","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedVector","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IndexedVector","kind":"identifier"}],"abstract":[{"text":"A type for representing vector literals that assign specific bit\/logic values to specific indices.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"IndexedVector","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/indexedvector","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/MemberAccess":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MemberAccess"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MemberAccess"}],"type":"topic","title":"MemberAccess","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess","abstract":[{"type":"text","text":"An expression accessing a member within a record instance."}],"url":"\/documentation\/vhdlparsing\/memberaccess"},"doc://VHDLParsing/documentation/VHDLParsing/Statement":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Statement","title":"Statement","url":"\/documentation\/vhdlparsing\/statement","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Statement","kind":"identifier"}],"navigatorTitle":[{"text":"Statement","kind":"identifier"}],"abstract":[{"type":"text","text":"A statement is a a full operation that contains expressions that resolve to some value or logic that is"},{"text":" ","type":"text"},{"type":"text","text":"performed."}],"kind":"symbol"},"doc://VHDLParsing/s8SendableP":{"identifier":"doc:\/\/VHDLParsing\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation/Equatable-Implementations":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation\/Equatable-Implementations","title":"Equatable Implementations","url":"\/documentation\/vhdlparsing\/castoperation\/equatable-implementations","kind":"article","abstract":[],"type":"topic","role":"collectionGroup"}}}