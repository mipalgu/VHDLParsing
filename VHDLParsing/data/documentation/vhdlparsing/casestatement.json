{"abstract":[{"type":"text","text":"A struct that represents a "},{"type":"codeVoice","code":"case"},{"type":"text","text":" statement in "},{"type":"codeVoice","code":"VHDL"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CaseStatement","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseStatement"}],"platforms":["Linux"]}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/VHDLParsing\/documentation\/VHDLParsing"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"seeAlsoSections":[{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForLoop","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IfBlock","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SynchronousBlock","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenCase","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenCondition"],"generated":true,"title":"Synchronous Blocks"}],"relationshipsSections":[{"identifiers":["doc:\/\/VHDLParsing\/Se","doc:\/\/VHDLParsing\/SE","doc:\/\/VHDLParsing\/SQ","doc:\/\/VHDLParsing\/SH","doc:\/\/VHDLParsing\/SY","doc:\/\/VHDLParsing\/s8SendableP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"variants":[{"paths":["\/documentation\/vhdlparsing\/casestatement"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CaseStatement\/init(condition:cases:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CaseStatement\/init(rawValue:)"],"title":"Initializers"},{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CaseStatement\/cases","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CaseStatement\/condition","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CaseStatement\/rawValue"],"title":"Instance Properties"},{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CaseStatement\/Equatable-Implementations","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CaseStatement\/RawRepresentable-Implementations"],"generated":true,"title":"Default Implementations"}],"metadata":{"externalID":"s:11VHDLParsing13CaseStatementV","symbolKind":"struct","role":"symbol","navigatorTitle":[{"text":"CaseStatement","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseStatement","kind":"identifier"}],"title":"CaseStatement","modules":[{"name":"VHDLParsing"}],"roleHeading":"Structure"},"kind":"symbol","references":{"doc://VHDLParsing/documentation/VHDLParsing/CaseStatement/Equatable-Implementations":{"url":"\/documentation\/vhdlparsing\/casestatement\/equatable-implementations","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CaseStatement\/Equatable-Implementations","abstract":[],"title":"Equatable Implementations","type":"topic","role":"collectionGroup","kind":"article"},"doc://VHDLParsing/documentation/VHDLParsing/CaseStatement":{"kind":"symbol","abstract":[{"type":"text","text":"A struct that represents a "},{"type":"codeVoice","code":"case"},{"type":"text","text":" statement in "},{"type":"codeVoice","code":"VHDL"},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CaseStatement"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CaseStatement","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseStatement"}],"type":"topic","title":"CaseStatement","url":"\/documentation\/vhdlparsing\/casestatement"},"doc://VHDLParsing/documentation/VHDLParsing/CaseStatement/RawRepresentable-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","title":"RawRepresentable Implementations","url":"\/documentation\/vhdlparsing\/casestatement\/rawrepresentable-implementations","abstract":[],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CaseStatement\/RawRepresentable-Implementations"},"doc://VHDLParsing/documentation/VHDLParsing/ForLoop":{"kind":"symbol","abstract":[{"type":"text","text":"A structure for definine "},{"inlineContent":[{"text":"synchronous","type":"text"}],"type":"emphasis"},{"type":"text","text":" for loops."}],"role":"symbol","navigatorTitle":[{"text":"ForLoop","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForLoop","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForLoop","kind":"identifier"}],"type":"topic","title":"ForLoop","url":"\/documentation\/vhdlparsing\/forloop"},"doc://VHDLParsing/documentation/VHDLParsing/WhenCase":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhenCase"}],"type":"topic","kind":"symbol","title":"WhenCase","navigatorTitle":[{"kind":"identifier","text":"WhenCase"}],"url":"\/documentation\/vhdlparsing\/whencase","abstract":[{"type":"text","text":"A single when case including the code within it."}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenCase"},"doc://VHDLParsing/documentation/VHDLParsing/WhenCondition":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WhenCondition","kind":"identifier"}],"title":"WhenCondition","kind":"symbol","navigatorTitle":[{"text":"WhenCondition","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenCondition","role":"symbol","type":"topic","abstract":[{"text":"A condition that can be used in a ","type":"text"},{"code":"when","type":"codeVoice"},{"text":" statement.","type":"text"}],"url":"\/documentation\/vhdlparsing\/whencondition"},"doc://VHDLParsing/documentation/VHDLParsing":{"kind":"symbol","url":"\/documentation\/vhdlparsing","abstract":[],"role":"collection","title":"VHDLParsing","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/CaseStatement/init(condition:cases:)":{"url":"\/documentation\/vhdlparsing\/casestatement\/init(condition:cases:)","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CaseStatement\/init(condition:cases:)","abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"CaseStatement"},{"type":"text","text":" with the given condition and cases."}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"condition","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Expression","preciseIdentifier":"s:11VHDLParsing10ExpressionO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"cases","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"WhenCase","preciseIdentifier":"s:11VHDLParsing8WhenCaseV","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"title":"init(condition:cases:)","type":"topic","role":"symbol","kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/IfBlock":{"kind":"symbol","abstract":[{"text":"This type is used to represent an if-statement in ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":".","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IfBlock"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IfBlock","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfBlock"}],"type":"topic","title":"IfBlock","url":"\/documentation\/vhdlparsing\/ifblock"},"doc://VHDLParsing/SE":{"identifier":"doc:\/\/VHDLParsing\/SE","title":"Swift.Encodable","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/SynchronousBlock":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SynchronousBlock","title":"SynchronousBlock","url":"\/documentation\/vhdlparsing\/synchronousblock","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SynchronousBlock"}],"navigatorTitle":[{"kind":"identifier","text":"SynchronousBlock"}],"abstract":[{"text":"A type for representing code that exists within a ","type":"text"},{"type":"codeVoice","code":"process"},{"text":" block in ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":".","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/SH":{"identifier":"doc:\/\/VHDLParsing\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/CaseStatement/condition":{"kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"condition","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Expression","preciseIdentifier":"s:11VHDLParsing10ExpressionO","kind":"typeIdentifier"}],"url":"\/documentation\/vhdlparsing\/casestatement\/condition","role":"symbol","title":"condition","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CaseStatement\/condition","abstract":[{"text":"The condition inside the case statement.","type":"text"}],"type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/CaseStatement/cases":{"url":"\/documentation\/vhdlparsing\/casestatement\/cases","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CaseStatement\/cases","abstract":[{"type":"text","text":"The when statements inside the case statement."}],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"cases"},{"text":": [","kind":"text"},{"text":"WhenCase","preciseIdentifier":"s:11VHDLParsing8WhenCaseV","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"title":"cases","type":"topic","role":"symbol","kind":"symbol"},"doc://VHDLParsing/SY":{"identifier":"doc:\/\/VHDLParsing\/SY","title":"Swift.RawRepresentable","type":"unresolvable"},"doc://VHDLParsing/Se":{"identifier":"doc:\/\/VHDLParsing\/Se","title":"Swift.Decodable","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/CaseStatement/rawValue":{"url":"\/documentation\/vhdlparsing\/casestatement\/rawvalue","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CaseStatement\/rawValue","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"VHDL"},{"type":"text","text":" code for this statement."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"rawValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"title":"rawValue","type":"topic","role":"symbol","kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/CaseStatement/init(rawValue:)":{"url":"\/documentation\/vhdlparsing\/casestatement\/init(rawvalue:)","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CaseStatement\/init(rawValue:)","abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"CaseStatement"},{"type":"text","text":" from the given "},{"type":"codeVoice","code":"VHDL"},{"type":"text","text":" code."}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(rawValue:)","type":"topic","role":"symbol","kind":"symbol"},"doc://VHDLParsing/s8SendableP":{"identifier":"doc:\/\/VHDLParsing\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://VHDLParsing/SQ":{"identifier":"doc:\/\/VHDLParsing\/SQ","title":"Swift.Equatable","type":"unresolvable"}}}