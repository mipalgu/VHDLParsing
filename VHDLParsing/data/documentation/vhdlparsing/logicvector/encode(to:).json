{"identifier":{"url":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/LogicVector\/encode(to:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/VHDLParsing\/documentation\/VHDLParsing","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/LogicVector","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/LogicVector\/RawRepresentable-Implementations"]]},"variants":[{"paths":["\/documentation\/vhdlparsing\/logicvector\/encode(to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:SYsSERzSS8RawValueSYRtzrlE6encode2toys7Encoder_p_tKF::SYNTHESIZED::s:11VHDLParsing11LogicVectorV","role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP","text":"Encoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RawRepresentable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}]},"modules":[{"relatedModules":["Swift"],"name":"VHDLParsing"}],"title":"encode(to:)","extendedModule":"Swift","roleHeading":"Instance Method"},"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"RawRepresentable.encode(to:)"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"encoder"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7EncoderP","kind":"typeIdentifier","text":"Encoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://VHDLParsing/documentation/VHDLParsing/LogicLiteral":{"title":"LogicLiteral","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/LogicLiteral","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LogicLiteral","kind":"identifier"}],"abstract":[{"text":"The possible values for a single bit logic value in ","type":"text"},{"code":"VHDL","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"LogicLiteral","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/logicliteral","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/VectorLiteral":{"title":"VectorLiteral","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorLiteral","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VectorLiteral","kind":"identifier"}],"abstract":[{"text":"A vector literal is a string of bits, hexademical digits, or octal digits.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"VectorLiteral","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/vectorliteral","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/LogicVector/encode(to:)":{"type":"topic","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/LogicVector\/encode(to:)","abstract":[],"kind":"symbol","title":"encode(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7EncoderP","text":"Encoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"RawRepresentable","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/vhdlparsing\/logicvector\/encode(to:)","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing":{"kind":"symbol","url":"\/documentation\/vhdlparsing","abstract":[],"role":"collection","title":"VHDLParsing","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/LogicVector/RawRepresentable-Implementations":{"type":"topic","abstract":[],"url":"\/documentation\/vhdlparsing\/logicvector\/rawrepresentable-implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/LogicVector\/RawRepresentable-Implementations","title":"RawRepresentable Implementations"},"doc://VHDLParsing/documentation/VHDLParsing/LogicVector":{"title":"LogicVector","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/LogicVector","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LogicVector"}],"abstract":[{"text":"A type for representing a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorLiteral","type":"reference"},{"text":" of ","type":"text"},{"code":"std_logic","type":"codeVoice"},{"text":" values (","type":"text"},{"isActive":true,"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/LogicLiteral","type":"reference"},{"text":").","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LogicVector"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/logicvector","type":"topic"}}}