{"hierarchy":{"paths":[["doc:\/\/VHDLParsing\/documentation\/VHDLParsing"]]},"metadata":{"title":"BooleanExpression","symbolKind":"enum","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"BooleanExpression"}],"modules":[{"name":"VHDLParsing"}],"externalID":"s:11VHDLParsing17BooleanExpressionO","role":"symbol","roleHeading":"Enumeration","navigatorTitle":[{"kind":"identifier","text":"BooleanExpression"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"BooleanExpression"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"This type represents an expression that can be represented as a single logic expression. For example,"},{"type":"text","text":" "},{"type":"codeVoice","code":"a and b"},{"type":"text","text":" is a valid expression, but "},{"type":"codeVoice","code":"a and b or c"},{"type":"text","text":" is not since it contains two logic operations. On the"},{"type":"text","text":" "},{"type":"text","text":"contrary, "},{"type":"codeVoice","code":"a and (b or c)"},{"type":"text","text":" is a valid expression since the expression is represented as an "},{"type":"codeVoice","code":"and"},{"type":"text","text":" operation"},{"type":"text","text":" "},{"type":"text","text":"on two subexpressions (one of which is also a logical expression)."}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"A boolean expression containing common boolean operations."}],"variants":[{"paths":["\/documentation\/vhdlparsing\/booleanexpression"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/VHDLParsing\/Se","doc:\/\/VHDLParsing\/SE","doc:\/\/VHDLParsing\/SQ","doc:\/\/VHDLParsing\/SH","doc:\/\/VHDLParsing\/SY","doc:\/\/VHDLParsing\/s8SendableP"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"seeAlsoSections":[{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BinaryOperation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ComparisonOperation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ConditionalExpression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CustomFunctionCall","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/DirectReference","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/EdgeCondition","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCall","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCallable","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedVector","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MathRealFunctionCalls","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Statement","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableAssignment","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableReference","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorIndex","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorSize"],"title":"Basic Arithmetic","generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"topicSections":[{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/and(lhs:rhs:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/nand(lhs:rhs:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/nor(lhs:rhs:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/not(value:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/or(lhs:rhs:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/xnor(lhs:rhs:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/xor(lhs:rhs:)"],"title":"Enumeration Cases"},{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/init(rawValue:)"],"title":"Initializers"},{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/rawValue"],"title":"Instance Properties"},{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/Equatable-Implementations","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/RawRepresentable-Implementations"],"title":"Default Implementations","generated":true}],"kind":"symbol","references":{"doc://VHDLParsing/documentation/VHDLParsing/CustomFunctionCall":{"title":"CustomFunctionCall","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CustomFunctionCall","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomFunctionCall"}],"abstract":[{"type":"text","text":"A custom function call."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CustomFunctionCall"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/customfunctioncall","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/BooleanExpression/xnor(lhs:rhs:)":{"abstract":[{"text":"An ","type":"text"},{"code":"xnor","type":"codeVoice"},{"text":" operation.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"xnor","kind":"identifier"},{"text":"(","kind":"text"},{"text":"lhs","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Expression","preciseIdentifier":"s:11VHDLParsing10ExpressionO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Expression","preciseIdentifier":"s:11VHDLParsing10ExpressionO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/xnor(lhs:rhs:)","url":"\/documentation\/vhdlparsing\/booleanexpression\/xnor(lhs:rhs:)","type":"topic","role":"symbol","title":"BooleanExpression.xnor(lhs:rhs:)"},"doc://VHDLParsing/documentation/VHDLParsing/BooleanExpression/not(value:)":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/not(value:)","url":"\/documentation\/vhdlparsing\/booleanexpression\/not(value:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"not"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing10ExpressionO","text":"Expression"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"not"},{"type":"text","text":" operation."}],"title":"BooleanExpression.not(value:)","role":"symbol","kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/MathRealFunctionCalls":{"url":"\/documentation\/vhdlparsing\/mathrealfunctioncalls","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MathRealFunctionCalls"}],"type":"topic","title":"MathRealFunctionCalls","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MathRealFunctionCalls"}],"abstract":[{"text":"A function call where the function being called exists within the ","type":"text"},{"type":"codeVoice","code":"math_real"},{"text":" package.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MathRealFunctionCalls","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/VariableMap":{"url":"\/documentation\/vhdlparsing\/variablemap","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"VariableMap","kind":"identifier"}],"type":"topic","title":"VariableMap","kind":"symbol","navigatorTitle":[{"text":"VariableMap","kind":"identifier"}],"abstract":[{"text":"An operation that maps 2 signals together.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap","role":"symbol"},"doc://VHDLParsing/SQ":{"identifier":"doc:\/\/VHDLParsing\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://VHDLParsing/documentation/VHDLParsing/ConditionalExpression":{"url":"\/documentation\/vhdlparsing\/conditionalexpression","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConditionalExpression"}],"type":"topic","title":"ConditionalExpression","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ConditionalExpression"}],"abstract":[{"text":"A type for representing expression that can be used in a conditional statement.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ConditionalExpression","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/BooleanExpression/xor(lhs:rhs:)":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/xor(lhs:rhs:)","url":"\/documentation\/vhdlparsing\/booleanexpression\/xor(lhs:rhs:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"xor"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing10ExpressionO","text":"Expression"},{"kind":"text","text":", "},{"kind":"externalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Expression","preciseIdentifier":"s:11VHDLParsing10ExpressionO"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"xor"},{"type":"text","text":" operation."}],"title":"BooleanExpression.xor(lhs:rhs:)","role":"symbol","kind":"symbol"},"doc://VHDLParsing/SE":{"identifier":"doc:\/\/VHDLParsing\/SE","type":"unresolvable","title":"Swift.Encodable"},"doc://VHDLParsing/documentation/VHDLParsing/BooleanExpression/nor(lhs:rhs:)":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"nor"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing10ExpressionO","text":"Expression"},{"kind":"text","text":", "},{"kind":"externalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing10ExpressionO","text":"Expression"},{"kind":"text","text":")"}],"url":"\/documentation\/vhdlparsing\/booleanexpression\/nor(lhs:rhs:)","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/nor(lhs:rhs:)","role":"symbol","kind":"symbol","title":"BooleanExpression.nor(lhs:rhs:)","type":"topic","abstract":[{"type":"text","text":"A "},{"code":"nor","type":"codeVoice"},{"type":"text","text":" operation."}]},"doc://VHDLParsing/documentation/VHDLParsing/ComparisonOperation":{"title":"ComparisonOperation","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ComparisonOperation","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComparisonOperation"}],"abstract":[{"text":"A type for representing VHDL comparison operations.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ComparisonOperation"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/comparisonoperation","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/BooleanExpression/init(rawValue:)":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/init(rawValue:)","url":"\/documentation\/vhdlparsing\/booleanexpression\/init(rawvalue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"BooleanExpression"},{"type":"text","text":" from the given "},{"type":"codeVoice","code":"VHDL"},{"type":"text","text":" code."}],"title":"init(rawValue:)","role":"symbol","kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/BooleanExpression/RawRepresentable-Implementations":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/RawRepresentable-Implementations","url":"\/documentation\/vhdlparsing\/booleanexpression\/rawrepresentable-implementations","type":"topic","abstract":[],"title":"RawRepresentable Implementations","role":"collectionGroup","kind":"article"},"doc://VHDLParsing/documentation/VHDLParsing/VectorIndex":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"VectorIndex"}],"title":"VectorIndex","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"VectorIndex"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorIndex","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An index of a vector in "},{"type":"codeVoice","code":"VHDL"},{"type":"text","text":"."}],"url":"\/documentation\/vhdlparsing\/vectorindex"},"doc://VHDLParsing/documentation/VHDLParsing/BooleanExpression/nand(lhs:rhs:)":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/nand(lhs:rhs:)","url":"\/documentation\/vhdlparsing\/booleanexpression\/nand(lhs:rhs:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"nand"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing10ExpressionO","text":"Expression"},{"kind":"text","text":", "},{"kind":"externalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Expression","preciseIdentifier":"s:11VHDLParsing10ExpressionO"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"nand"},{"type":"text","text":" operation."}],"title":"BooleanExpression.nand(lhs:rhs:)","role":"symbol","kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/IndexedVector":{"title":"IndexedVector","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedVector","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IndexedVector","kind":"identifier"}],"abstract":[{"text":"A type for representing vector literals that assign specific bit\/logic values to specific indices.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"IndexedVector","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/indexedvector","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing":{"kind":"symbol","url":"\/documentation\/vhdlparsing","abstract":[],"role":"collection","title":"VHDLParsing","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/Expression":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Expression"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Expression"}],"type":"topic","title":"Expression","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression","abstract":[{"text":"An ","type":"text"},{"code":"Expression","type":"codeVoice"},{"text":" represents a stand-alone statement that resolves to some value in ","type":"text"},{"code":"VHDL","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/vhdlparsing\/expression"},"doc://VHDLParsing/documentation/VHDLParsing/Statement":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Statement","title":"Statement","url":"\/documentation\/vhdlparsing\/statement","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Statement","kind":"identifier"}],"navigatorTitle":[{"text":"Statement","kind":"identifier"}],"abstract":[{"type":"text","text":"A statement is a a full operation that contains expressions that resolve to some value or logic that is"},{"text":" ","type":"text"},{"type":"text","text":"performed."}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/VariableReference":{"navigatorTitle":[{"text":"VariableReference","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/variablereference","abstract":[{"text":"A type for defining types of references to a variable.","type":"text"}],"role":"symbol","title":"VariableReference","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"VariableReference","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableReference","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/BooleanExpression/Equatable-Implementations":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/Equatable-Implementations","url":"\/documentation\/vhdlparsing\/booleanexpression\/equatable-implementations","type":"topic","abstract":[],"title":"Equatable Implementations","role":"collectionGroup","kind":"article"},"doc://VHDLParsing/SY":{"identifier":"doc:\/\/VHDLParsing\/SY","type":"unresolvable","title":"Swift.RawRepresentable"},"doc://VHDLParsing/documentation/VHDLParsing/SignalType":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"SignalType","kind":"identifier"}],"title":"SignalType","kind":"symbol","navigatorTitle":[{"text":"SignalType","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalType","role":"symbol","type":"topic","abstract":[{"text":"Valid VHDL Signal types.","type":"text"}],"url":"\/documentation\/vhdlparsing\/signaltype"},"doc://VHDLParsing/documentation/VHDLParsing/BooleanExpression/rawValue":{"kind":"symbol","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"VHDL"},{"type":"text","text":" code representing this expression."}],"role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/rawValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"type":"topic","title":"rawValue","url":"\/documentation\/vhdlparsing\/booleanexpression\/rawvalue"},"doc://VHDLParsing/documentation/VHDLParsing/VectorSize":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VectorSize","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"VectorSize","kind":"identifier"}],"type":"topic","title":"VectorSize","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorSize","abstract":[{"text":"A type for representing VHDL vector sizes.","type":"text"}],"url":"\/documentation\/vhdlparsing\/vectorsize"},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation":{"kind":"symbol","role":"symbol","url":"\/documentation\/vhdlparsing\/castoperation","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation","abstract":[{"text":"A cast operation converting an expression to a specific ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalType"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CastOperation"}],"type":"topic","title":"CastOperation","navigatorTitle":[{"kind":"identifier","text":"CastOperation"}]},"doc://VHDLParsing/documentation/VHDLParsing/IndexedValue":{"navigatorTitle":[{"kind":"identifier","text":"IndexedValue"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/indexedvalue","abstract":[{"text":"This type represents a value for a specific index in a vector type within ","type":"text"},{"code":"VHDL","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","title":"IndexedValue","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IndexedValue"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/EdgeCondition":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EdgeCondition","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"EdgeCondition","kind":"identifier"}],"type":"topic","title":"EdgeCondition","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/EdgeCondition","abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ConditionalExpression","isActive":true,"type":"reference"},{"text":" that checks for the presence of a clocks edge.","type":"text"}],"url":"\/documentation\/vhdlparsing\/edgecondition"},"doc://VHDLParsing/s8SendableP":{"identifier":"doc:\/\/VHDLParsing\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://VHDLParsing/Se":{"identifier":"doc:\/\/VHDLParsing\/Se","type":"unresolvable","title":"Swift.Decodable"},"doc://VHDLParsing/documentation/VHDLParsing/BinaryOperation":{"url":"\/documentation\/vhdlparsing\/binaryoperation","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"BinaryOperation","kind":"identifier"}],"type":"topic","title":"BinaryOperation","kind":"symbol","navigatorTitle":[{"text":"BinaryOperation","kind":"identifier"}],"abstract":[{"text":"A type for representing arithmetic operations that work with two operands.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BinaryOperation","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/BooleanExpression/and(lhs:rhs:)":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/and(lhs:rhs:)","url":"\/documentation\/vhdlparsing\/booleanexpression\/and(lhs:rhs:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"and"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing10ExpressionO","text":"Expression"},{"kind":"text","text":", "},{"kind":"externalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Expression","preciseIdentifier":"s:11VHDLParsing10ExpressionO"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"and"},{"type":"text","text":" operation."}],"title":"BooleanExpression.and(lhs:rhs:)","role":"symbol","kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/BooleanExpression/or(lhs:rhs:)":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression\/or(lhs:rhs:)","url":"\/documentation\/vhdlparsing\/booleanexpression\/or(lhs:rhs:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"or","kind":"identifier"},{"text":"(","kind":"text"},{"text":"lhs","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Expression","kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing10ExpressionO"},{"text":", ","kind":"text"},{"text":"rhs","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Expression","kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing10ExpressionO"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"or"},{"type":"text","text":" operation."}],"title":"BooleanExpression.or(lhs:rhs:)","role":"symbol","kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/FunctionCallable":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCallable","title":"FunctionCallable","url":"\/documentation\/vhdlparsing\/functioncallable","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FunctionCallable"}],"navigatorTitle":[{"kind":"identifier","text":"FunctionCallable"}],"abstract":[{"text":"Helper protocol for defining types that can be executed as a function call.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/BooleanExpression":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BooleanExpression"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BooleanExpression"}],"type":"topic","title":"BooleanExpression","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression","abstract":[{"type":"text","text":"A boolean expression containing common boolean operations."}],"url":"\/documentation\/vhdlparsing\/booleanexpression"},"doc://VHDLParsing/documentation/VHDLParsing/DirectReference":{"navigatorTitle":[{"kind":"identifier","text":"DirectReference"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/directreference","abstract":[{"type":"text","text":"A direct reference is a reference to a variable via it’s name or member access in a record type."}],"role":"symbol","title":"DirectReference","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DirectReference"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/DirectReference","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/FunctionCall":{"title":"FunctionCall","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCall","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"FunctionCall"}],"abstract":[{"text":"This type represents ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":" code that is enacting a function call.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FunctionCall"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/functioncall","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/VariableAssignment":{"title":"VariableAssignment","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableAssignment","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VariableAssignment","kind":"identifier"}],"abstract":[{"text":"A variable assignment exists within a port map and is used to assign a port to a variable.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"VariableAssignment","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/variableassignment","type":"topic"},"doc://VHDLParsing/SH":{"identifier":"doc:\/\/VHDLParsing\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://VHDLParsing/documentation/VHDLParsing/MemberAccess":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MemberAccess"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MemberAccess"}],"type":"topic","title":"MemberAccess","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess","abstract":[{"type":"text","text":"An expression accessing a member within a record instance."}],"url":"\/documentation\/vhdlparsing\/memberaccess"}}}