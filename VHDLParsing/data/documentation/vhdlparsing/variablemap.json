{"metadata":{"externalID":"s:11VHDLParsing11VariableMapV","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"VariableMap"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"VariableMap"}],"title":"VariableMap","modules":[{"name":"VHDLParsing"}],"roleHeading":"Structure","symbolKind":"struct"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap\/init(lhs:rhs:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap\/init(rawValue:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap\/lhs","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap\/rawValue","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap\/rhs"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap\/Equatable-Implementations","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap\/RawRepresentable-Implementations"]}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/VHDLParsing\/Se","doc:\/\/VHDLParsing\/SE","doc:\/\/VHDLParsing\/SQ","doc:\/\/VHDLParsing\/SH","doc:\/\/VHDLParsing\/SY","doc:\/\/VHDLParsing\/s8SendableP"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VariableMap","kind":"identifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"text":"This operation is used in generic maps or port maps for components.","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vhdlparsing\/variablemap"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/VHDLParsing\/documentation\/VHDLParsing"]]},"abstract":[{"text":"An operation that maps 2 signals together.","type":"text"}],"seeAlsoSections":[{"generated":true,"title":"Basic Arithmetic","identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BinaryOperation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ComparisonOperation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ConditionalExpression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CustomFunctionCall","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/DirectReference","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/EdgeCondition","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCall","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCallable","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedVector","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MathRealFunctionCalls","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Statement","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableAssignment","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableReference","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorIndex","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorSize"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap"},"sections":[],"references":{"doc://VHDLParsing/documentation/VHDLParsing/VariableMap/rawValue":{"kind":"symbol","abstract":[{"type":"text","text":"The equivalent "},{"code":"VHDL","type":"codeVoice"},{"text":" code.","type":"text"}],"role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap\/rawValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"type":"topic","title":"rawValue","url":"\/documentation\/vhdlparsing\/variablemap\/rawvalue"},"doc://VHDLParsing/documentation/VHDLParsing/VariableMap/RawRepresentable-Implementations":{"kind":"article","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap\/RawRepresentable-Implementations","type":"topic","title":"RawRepresentable Implementations","url":"\/documentation\/vhdlparsing\/variablemap\/rawrepresentable-implementations"},"doc://VHDLParsing/documentation/VHDLParsing/VariableMap/Equatable-Implementations":{"kind":"article","title":"Equatable Implementations","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap\/Equatable-Implementations","url":"\/documentation\/vhdlparsing\/variablemap\/equatable-implementations"},"doc://VHDLParsing/documentation/VHDLParsing/BinaryOperation":{"url":"\/documentation\/vhdlparsing\/binaryoperation","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"BinaryOperation","kind":"identifier"}],"type":"topic","title":"BinaryOperation","kind":"symbol","navigatorTitle":[{"text":"BinaryOperation","kind":"identifier"}],"abstract":[{"text":"A type for representing arithmetic operations that work with two operands.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BinaryOperation","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/FunctionCallable":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCallable","title":"FunctionCallable","url":"\/documentation\/vhdlparsing\/functioncallable","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FunctionCallable"}],"navigatorTitle":[{"kind":"identifier","text":"FunctionCallable"}],"abstract":[{"text":"Helper protocol for defining types that can be executed as a function call.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/ComparisonOperation":{"title":"ComparisonOperation","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ComparisonOperation","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComparisonOperation"}],"abstract":[{"text":"A type for representing VHDL comparison operations.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ComparisonOperation"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/comparisonoperation","type":"topic"},"doc://VHDLParsing/SE":{"type":"unresolvable","title":"Swift.Encodable","identifier":"doc:\/\/VHDLParsing\/SE"},"doc://VHDLParsing/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/VHDLParsing\/s8SendableP"},"doc://VHDLParsing/documentation/VHDLParsing/VectorSize":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VectorSize","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"VectorSize","kind":"identifier"}],"type":"topic","title":"VectorSize","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorSize","abstract":[{"text":"A type for representing VHDL vector sizes.","type":"text"}],"url":"\/documentation\/vhdlparsing\/vectorsize"},"doc://VHDLParsing/documentation/VHDLParsing/EdgeCondition":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EdgeCondition","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"EdgeCondition","kind":"identifier"}],"type":"topic","title":"EdgeCondition","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/EdgeCondition","abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ConditionalExpression","isActive":true,"type":"reference"},{"text":" that checks for the presence of a clocks edge.","type":"text"}],"url":"\/documentation\/vhdlparsing\/edgecondition"},"doc://VHDLParsing/documentation/VHDLParsing/Expression":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Expression"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Expression"}],"type":"topic","title":"Expression","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression","abstract":[{"text":"An ","type":"text"},{"code":"Expression","type":"codeVoice"},{"text":" represents a stand-alone statement that resolves to some value in ","type":"text"},{"code":"VHDL","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/vhdlparsing\/expression"},"doc://VHDLParsing/documentation/VHDLParsing/DirectReference":{"navigatorTitle":[{"kind":"identifier","text":"DirectReference"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/directreference","abstract":[{"type":"text","text":"A direct reference is a reference to a variable via itâ€™s name or member access in a record type."}],"role":"symbol","title":"DirectReference","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DirectReference"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/DirectReference","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/ConditionalExpression":{"url":"\/documentation\/vhdlparsing\/conditionalexpression","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConditionalExpression"}],"type":"topic","title":"ConditionalExpression","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ConditionalExpression"}],"abstract":[{"text":"A type for representing expression that can be used in a conditional statement.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ConditionalExpression","role":"symbol"},"doc://VHDLParsing/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/VHDLParsing\/Se"},"doc://VHDLParsing/documentation/VHDLParsing/Statement":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Statement","title":"Statement","url":"\/documentation\/vhdlparsing\/statement","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Statement","kind":"identifier"}],"navigatorTitle":[{"text":"Statement","kind":"identifier"}],"abstract":[{"type":"text","text":"A statement is a a full operation that contains expressions that resolve to some value or logic that is"},{"text":" ","type":"text"},{"type":"text","text":"performed."}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation":{"kind":"symbol","role":"symbol","url":"\/documentation\/vhdlparsing\/castoperation","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation","abstract":[{"text":"A cast operation converting an expression to a specific ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalType"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CastOperation"}],"type":"topic","title":"CastOperation","navigatorTitle":[{"kind":"identifier","text":"CastOperation"}]},"doc://VHDLParsing/documentation/VHDLParsing/VariableReference":{"navigatorTitle":[{"text":"VariableReference","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/variablereference","abstract":[{"text":"A type for defining types of references to a variable.","type":"text"}],"role":"symbol","title":"VariableReference","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"VariableReference","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableReference","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/FunctionCall":{"title":"FunctionCall","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCall","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"FunctionCall"}],"abstract":[{"text":"This type represents ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":" code that is enacting a function call.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FunctionCall"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/functioncall","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/VariableAssignment":{"title":"VariableAssignment","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableAssignment","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VariableAssignment","kind":"identifier"}],"abstract":[{"text":"A variable assignment exists within a port map and is used to assign a port to a variable.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"VariableAssignment","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/variableassignment","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/VariableMap":{"url":"\/documentation\/vhdlparsing\/variablemap","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"VariableMap","kind":"identifier"}],"type":"topic","title":"VariableMap","kind":"symbol","navigatorTitle":[{"text":"VariableMap","kind":"identifier"}],"abstract":[{"text":"An operation that maps 2 signals together.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/VariableMap/init(rawValue:)":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap\/init(rawValue:)","url":"\/documentation\/vhdlparsing\/variablemap\/init(rawvalue:)","title":"init(rawValue:)","abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"VariableMap"},{"type":"text","text":" from the given "},{"type":"codeVoice","code":"VHDL"},{"type":"text","text":" code."}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/VectorIndex":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"VectorIndex"}],"title":"VectorIndex","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"VectorIndex"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorIndex","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An index of a vector in "},{"type":"codeVoice","code":"VHDL"},{"type":"text","text":"."}],"url":"\/documentation\/vhdlparsing\/vectorindex"},"doc://VHDLParsing/documentation/VHDLParsing/IndexedValue":{"navigatorTitle":[{"kind":"identifier","text":"IndexedValue"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/indexedvalue","abstract":[{"text":"This type represents a value for a specific index in a vector type within ","type":"text"},{"code":"VHDL","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","title":"IndexedValue","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IndexedValue"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing":{"kind":"symbol","url":"\/documentation\/vhdlparsing","abstract":[],"role":"collection","title":"VHDLParsing","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/VariableMap/init(lhs:rhs:)":{"url":"\/documentation\/vhdlparsing\/variablemap\/init(lhs:rhs:)","role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"Creates a new ","type":"text"},{"type":"codeVoice","code":"VariableMap"},{"text":" from the given ","type":"text"},{"type":"codeVoice","code":"lhs"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"rhs"},{"text":".","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"lhs","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing17VariableReferenceO","text":"VariableReference"},{"kind":"text","text":", "},{"kind":"externalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing18VariableAssignmentO","text":"VariableAssignment"},{"kind":"text","text":")"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap\/init(lhs:rhs:)","title":"init(lhs:rhs:)"},"doc://VHDLParsing/documentation/VHDLParsing/SignalType":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"SignalType","kind":"identifier"}],"title":"SignalType","kind":"symbol","navigatorTitle":[{"text":"SignalType","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalType","role":"symbol","type":"topic","abstract":[{"text":"Valid VHDL Signal types.","type":"text"}],"url":"\/documentation\/vhdlparsing\/signaltype"},"doc://VHDLParsing/SQ":{"identifier":"doc:\/\/VHDLParsing\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://VHDLParsing/documentation/VHDLParsing/MemberAccess":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MemberAccess"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MemberAccess"}],"type":"topic","title":"MemberAccess","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess","abstract":[{"type":"text","text":"An expression accessing a member within a record instance."}],"url":"\/documentation\/vhdlparsing\/memberaccess"},"doc://VHDLParsing/documentation/VHDLParsing/BooleanExpression":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BooleanExpression"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BooleanExpression"}],"type":"topic","title":"BooleanExpression","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression","abstract":[{"type":"text","text":"A boolean expression containing common boolean operations."}],"url":"\/documentation\/vhdlparsing\/booleanexpression"},"doc://VHDLParsing/documentation/VHDLParsing/VariableMap/rhs":{"role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"VariableAssignment","preciseIdentifier":"s:11VHDLParsing18VariableAssignmentO"}],"type":"topic","kind":"symbol","title":"rhs","url":"\/documentation\/vhdlparsing\/variablemap\/rhs","abstract":[{"text":"The right-hand side signal to map.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap\/rhs"},"doc://VHDLParsing/SY":{"title":"Swift.RawRepresentable","type":"unresolvable","identifier":"doc:\/\/VHDLParsing\/SY"},"doc://VHDLParsing/documentation/VHDLParsing/MathRealFunctionCalls":{"url":"\/documentation\/vhdlparsing\/mathrealfunctioncalls","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MathRealFunctionCalls"}],"type":"topic","title":"MathRealFunctionCalls","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MathRealFunctionCalls"}],"abstract":[{"text":"A function call where the function being called exists within the ","type":"text"},{"type":"codeVoice","code":"math_real"},{"text":" package.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MathRealFunctionCalls","role":"symbol"},"doc://VHDLParsing/SH":{"identifier":"doc:\/\/VHDLParsing\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://VHDLParsing/documentation/VHDLParsing/VariableMap/lhs":{"kind":"symbol","title":"lhs","role":"symbol","abstract":[{"type":"text","text":"The left-hand side signal to map."}],"type":"topic","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap\/lhs","url":"\/documentation\/vhdlparsing\/variablemap\/lhs","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"VariableReference","preciseIdentifier":"s:11VHDLParsing17VariableReferenceO"}]},"doc://VHDLParsing/documentation/VHDLParsing/CustomFunctionCall":{"title":"CustomFunctionCall","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CustomFunctionCall","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomFunctionCall"}],"abstract":[{"type":"text","text":"A custom function call."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CustomFunctionCall"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/customfunctioncall","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/IndexedVector":{"title":"IndexedVector","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedVector","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IndexedVector","kind":"identifier"}],"abstract":[{"text":"A type for representing vector literals that assign specific bit\/logic values to specific indices.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"IndexedVector","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/indexedvector","type":"topic"}}}