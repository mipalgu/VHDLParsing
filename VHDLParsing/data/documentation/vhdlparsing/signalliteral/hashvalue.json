{"metadata":{"externalID":"s:SYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp::SYNTHESIZED::s:11VHDLParsing13SignalLiteralO","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"title":"hashValue","modules":[{"name":"VHDLParsing","relatedModules":["Swift"]}],"extendedModule":"Swift","roleHeading":"Instance Property","symbolKind":"property"},"kind":"symbol","variants":[{"paths":["\/documentation\/vhdlparsing\/signalliteral\/hashvalue"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/VHDLParsing\/documentation\/VHDLParsing","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalLiteral","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalLiteral\/RawRepresentable-Implementations"]]},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"RawRepresentable.hashValue"},{"text":".","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalLiteral\/hashValue"},"sections":[],"references":{"doc://VHDLParsing/documentation/VHDLParsing/SignalLiteral/RawRepresentable-Implementations":{"kind":"article","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalLiteral\/RawRepresentable-Implementations","type":"topic","title":"RawRepresentable Implementations","url":"\/documentation\/vhdlparsing\/signalliteral\/rawrepresentable-implementations"},"doc://VHDLParsing/documentation/VHDLParsing/SignalLiteral":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalLiteral"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SignalLiteral"}],"type":"topic","title":"SignalLiteral","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalLiteral","abstract":[{"type":"text","text":"A type for representing all signal literals."}],"url":"\/documentation\/vhdlparsing\/signalliteral"},"doc://VHDLParsing/documentation/VHDLParsing":{"kind":"symbol","url":"\/documentation\/vhdlparsing","abstract":[],"role":"collection","title":"VHDLParsing","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/SignalLiteral/hashValue":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"type":"topic","kind":"symbol","title":"hashValue","url":"\/documentation\/vhdlparsing\/signalliteral\/hashvalue","abstract":[],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalLiteral\/hashValue","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]}}}}