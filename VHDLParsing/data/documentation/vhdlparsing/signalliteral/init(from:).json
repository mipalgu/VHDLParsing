{"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalLiteral\/init(from:)"},"metadata":{"modules":[{"relatedModules":["Swift"],"name":"VHDLParsing"}],"externalID":"s:SYsSeRzSS8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc::SYNTHESIZED::s:11VHDLParsing13SignalLiteralO","extendedModule":"Swift","title":"init(from:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"roleHeading":"Initializer","symbolKind":"init","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"RawRepresentable","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"RawRepresentable.init(from:)"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/vhdlparsing\/signalliteral\/init(from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"decoder"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["Linux"]}]}],"hierarchy":{"paths":[["doc:\/\/VHDLParsing\/documentation\/VHDLParsing","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalLiteral","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalLiteral\/RawRepresentable-Implementations"]]},"references":{"doc://VHDLParsing/documentation/VHDLParsing/SignalLiteral/init(from:)":{"type":"topic","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"RawRepresentable","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/vhdlparsing\/signalliteral\/init(from:)","title":"init(from:)","abstract":[],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalLiteral\/init(from:)","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://VHDLParsing/documentation/VHDLParsing":{"kind":"symbol","url":"\/documentation\/vhdlparsing","abstract":[],"role":"collection","title":"VHDLParsing","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/SignalLiteral/RawRepresentable-Implementations":{"kind":"article","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalLiteral\/RawRepresentable-Implementations","type":"topic","title":"RawRepresentable Implementations","url":"\/documentation\/vhdlparsing\/signalliteral\/rawrepresentable-implementations"},"doc://VHDLParsing/documentation/VHDLParsing/SignalLiteral":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalLiteral"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SignalLiteral"}],"type":"topic","title":"SignalLiteral","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalLiteral","abstract":[{"type":"text","text":"A type for representing all signal literals."}],"url":"\/documentation\/vhdlparsing\/signalliteral"}}}