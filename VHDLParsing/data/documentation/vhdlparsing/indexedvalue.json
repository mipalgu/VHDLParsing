{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IndexedValue","kind":"identifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, consider a signal "},{"type":"codeVoice","code":"x"},{"type":"text","text":" with type "},{"type":"codeVoice","code":"std_logic_vector(3 downto 0)"},{"type":"text","text":". We can assign specific bits"},{"type":"text","text":" "},{"type":"text","text":"within "},{"type":"codeVoice","code":"x"},{"type":"text","text":" by using the "},{"type":"codeVoice","code":"VHDL"},{"type":"text","text":" statement "},{"type":"codeVoice","code":"x <= (3 => '1', others => '0');"},{"type":"text","text":". This statement says bit 3 of"},{"type":"text","text":" "},{"type":"codeVoice","code":"x"},{"type":"text","text":" should be set to 1 and all other bits to be set to 0. This type can be used to represent both"},{"type":"text","text":" "},{"type":"text","text":"expressions "},{"type":"codeVoice","code":"3 => '1'"},{"type":"text","text":" and "},{"type":"codeVoice","code":"others => '0'"},{"type":"text","text":" as two separate instances of this type."}]}]}],"hierarchy":{"paths":[["doc:\/\/VHDLParsing\/documentation\/VHDLParsing"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"This type represents a value for a specific index in a vector type within "},{"type":"codeVoice","code":"VHDL"},{"type":"text","text":"."}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/VHDLParsing\/Se","doc:\/\/VHDLParsing\/SE","doc:\/\/VHDLParsing\/SQ","doc:\/\/VHDLParsing\/SH","doc:\/\/VHDLParsing\/SY","doc:\/\/VHDLParsing\/s8SendableP"],"title":"Conforms To"}],"metadata":{"roleHeading":"Structure","externalID":"s:11VHDLParsing12IndexedValueV","modules":[{"name":"VHDLParsing"}],"navigatorTitle":[{"kind":"identifier","text":"IndexedValue"}],"title":"IndexedValue","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IndexedValue"}],"symbolKind":"struct","role":"symbol"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vhdlparsing\/indexedvalue"]}],"topicSections":[{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue\/init(index:value:)-5n7b5","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue\/init(index:value:)-ruut","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue\/init(rawValue:)"],"title":"Initializers"},{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue\/index","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue\/rawValue","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue\/value"],"title":"Instance Properties"},{"generated":true,"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue\/Equatable-Implementations","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue\/RawRepresentable-Implementations"],"title":"Default Implementations"}],"sections":[],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BinaryOperation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ComparisonOperation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ConditionalExpression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CustomFunctionCall","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/DirectReference","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/EdgeCondition","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCall","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCallable","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedVector","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MathRealFunctionCalls","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Statement","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableAssignment","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableReference","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorIndex","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorSize"],"title":"Basic Arithmetic"}],"references":{"doc://VHDLParsing/documentation/VHDLParsing/Expression":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Expression"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Expression"}],"type":"topic","title":"Expression","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression","abstract":[{"text":"An ","type":"text"},{"code":"Expression","type":"codeVoice"},{"text":" represents a stand-alone statement that resolves to some value in ","type":"text"},{"code":"VHDL","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/vhdlparsing\/expression"},"doc://VHDLParsing/documentation/VHDLParsing/VectorIndex":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"VectorIndex"}],"title":"VectorIndex","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"VectorIndex"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorIndex","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An index of a vector in "},{"type":"codeVoice","code":"VHDL"},{"type":"text","text":"."}],"url":"\/documentation\/vhdlparsing\/vectorindex"},"doc://VHDLParsing/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/VHDLParsing\/SQ"},"doc://VHDLParsing/documentation/VHDLParsing/IndexedValue/RawRepresentable-Implementations":{"role":"collectionGroup","kind":"article","title":"RawRepresentable Implementations","type":"topic","url":"\/documentation\/vhdlparsing\/indexedvalue\/rawrepresentable-implementations","abstract":[],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue\/RawRepresentable-Implementations"},"doc://VHDLParsing/documentation/VHDLParsing/IndexedValue/index":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"The index within the vector type to assign the "},{"type":"codeVoice","code":"value"},{"type":"text","text":" to."}],"title":"index","kind":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue\/index","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"VectorIndex","preciseIdentifier":"s:11VHDLParsing11VectorIndexO"}],"url":"\/documentation\/vhdlparsing\/indexedvalue\/index"},"doc://VHDLParsing/documentation/VHDLParsing/FunctionCallable":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCallable","title":"FunctionCallable","url":"\/documentation\/vhdlparsing\/functioncallable","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FunctionCallable"}],"navigatorTitle":[{"kind":"identifier","text":"FunctionCallable"}],"abstract":[{"text":"Helper protocol for defining types that can be executed as a function call.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/ComparisonOperation":{"title":"ComparisonOperation","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ComparisonOperation","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComparisonOperation"}],"abstract":[{"text":"A type for representing VHDL comparison operations.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ComparisonOperation"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/comparisonoperation","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/IndexedValue/init(index:value:)-5n7b5":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Intialise an indexed value with an index and signal literal."}],"title":"init(index:value:)","kind":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue\/init(index:value:)-5n7b5","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"VectorIndex","preciseIdentifier":"s:11VHDLParsing11VectorIndexO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SignalLiteral","preciseIdentifier":"s:11VHDLParsing13SignalLiteralO"},{"kind":"text","text":")"}],"url":"\/documentation\/vhdlparsing\/indexedvalue\/init(index:value:)-5n7b5"},"doc://VHDLParsing/documentation/VHDLParsing/VariableReference":{"navigatorTitle":[{"text":"VariableReference","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/variablereference","abstract":[{"text":"A type for defining types of references to a variable.","type":"text"}],"role":"symbol","title":"VariableReference","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"VariableReference","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableReference","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/IndexedValue":{"navigatorTitle":[{"kind":"identifier","text":"IndexedValue"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/indexedvalue","abstract":[{"text":"This type represents a value for a specific index in a vector type within ","type":"text"},{"code":"VHDL","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","title":"IndexedValue","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IndexedValue"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/VariableMap":{"url":"\/documentation\/vhdlparsing\/variablemap","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"VariableMap","kind":"identifier"}],"type":"topic","title":"VariableMap","kind":"symbol","navigatorTitle":[{"text":"VariableMap","kind":"identifier"}],"abstract":[{"text":"An operation that maps 2 signals together.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/ConditionalExpression":{"url":"\/documentation\/vhdlparsing\/conditionalexpression","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConditionalExpression"}],"type":"topic","title":"ConditionalExpression","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ConditionalExpression"}],"abstract":[{"text":"A type for representing expression that can be used in a conditional statement.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ConditionalExpression","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/MathRealFunctionCalls":{"url":"\/documentation\/vhdlparsing\/mathrealfunctioncalls","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MathRealFunctionCalls"}],"type":"topic","title":"MathRealFunctionCalls","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MathRealFunctionCalls"}],"abstract":[{"text":"A function call where the function being called exists within the ","type":"text"},{"type":"codeVoice","code":"math_real"},{"text":" package.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MathRealFunctionCalls","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/BinaryOperation":{"url":"\/documentation\/vhdlparsing\/binaryoperation","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"BinaryOperation","kind":"identifier"}],"type":"topic","title":"BinaryOperation","kind":"symbol","navigatorTitle":[{"text":"BinaryOperation","kind":"identifier"}],"abstract":[{"text":"A type for representing arithmetic operations that work with two operands.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BinaryOperation","role":"symbol"},"doc://VHDLParsing/SY":{"type":"unresolvable","title":"Swift.RawRepresentable","identifier":"doc:\/\/VHDLParsing\/SY"},"doc://VHDLParsing/documentation/VHDLParsing/IndexedValue/value":{"title":"value","role":"symbol","url":"\/documentation\/vhdlparsing\/indexedvalue\/value","type":"topic","abstract":[{"type":"text","text":"The value to assign to the bit located at "},{"code":"index","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"value","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11VHDLParsing10ExpressionO","text":"Expression","kind":"typeIdentifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue\/value"},"doc://VHDLParsing/documentation/VHDLParsing/VariableAssignment":{"title":"VariableAssignment","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableAssignment","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VariableAssignment","kind":"identifier"}],"abstract":[{"text":"A variable assignment exists within a port map and is used to assign a port to a variable.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"VariableAssignment","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/variableassignment","type":"topic"},"doc://VHDLParsing/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/VHDLParsing\/s8SendableP"},"doc://VHDLParsing/documentation/VHDLParsing/IndexedValue/rawValue":{"type":"topic","url":"\/documentation\/vhdlparsing\/indexedvalue\/rawvalue","role":"symbol","abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":" representation of this type.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rawValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"title":"rawValue","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue\/rawValue","kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/DirectReference":{"navigatorTitle":[{"kind":"identifier","text":"DirectReference"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/directreference","abstract":[{"type":"text","text":"A direct reference is a reference to a variable via it’s name or member access in a record type."}],"role":"symbol","title":"DirectReference","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DirectReference"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/DirectReference","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/IndexedValue/init(rawValue:)":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Initialise an indexed value from the "},{"type":"codeVoice","code":"VHDL"},{"type":"text","text":" code that represents it."}],"title":"init(rawValue:)","kind":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue\/init(rawValue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"url":"\/documentation\/vhdlparsing\/indexedvalue\/init(rawvalue:)"},"doc://VHDLParsing/documentation/VHDLParsing/SignalType":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"SignalType","kind":"identifier"}],"title":"SignalType","kind":"symbol","navigatorTitle":[{"text":"SignalType","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalType","role":"symbol","type":"topic","abstract":[{"text":"Valid VHDL Signal types.","type":"text"}],"url":"\/documentation\/vhdlparsing\/signaltype"},"doc://VHDLParsing/documentation/VHDLParsing/BooleanExpression":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BooleanExpression"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BooleanExpression"}],"type":"topic","title":"BooleanExpression","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression","abstract":[{"type":"text","text":"A boolean expression containing common boolean operations."}],"url":"\/documentation\/vhdlparsing\/booleanexpression"},"doc://VHDLParsing/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/VHDLParsing\/SH"},"doc://VHDLParsing/documentation/VHDLParsing":{"kind":"symbol","url":"\/documentation\/vhdlparsing","abstract":[],"role":"collection","title":"VHDLParsing","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing","type":"topic"},"doc://VHDLParsing/SE":{"type":"unresolvable","title":"Swift.Encodable","identifier":"doc:\/\/VHDLParsing\/SE"},"doc://VHDLParsing/documentation/VHDLParsing/VectorSize":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VectorSize","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"VectorSize","kind":"identifier"}],"type":"topic","title":"VectorSize","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorSize","abstract":[{"text":"A type for representing VHDL vector sizes.","type":"text"}],"url":"\/documentation\/vhdlparsing\/vectorsize"},"doc://VHDLParsing/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/VHDLParsing\/Se"},"doc://VHDLParsing/documentation/VHDLParsing/MemberAccess":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MemberAccess"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MemberAccess"}],"type":"topic","title":"MemberAccess","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess","abstract":[{"type":"text","text":"An expression accessing a member within a record instance."}],"url":"\/documentation\/vhdlparsing\/memberaccess"},"doc://VHDLParsing/documentation/VHDLParsing/CustomFunctionCall":{"title":"CustomFunctionCall","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CustomFunctionCall","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomFunctionCall"}],"abstract":[{"type":"text","text":"A custom function call."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CustomFunctionCall"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/customfunctioncall","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/FunctionCall":{"title":"FunctionCall","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCall","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"FunctionCall"}],"abstract":[{"text":"This type represents ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":" code that is enacting a function call.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FunctionCall"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/functioncall","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/IndexedValue/Equatable-Implementations":{"type":"topic","title":"Equatable Implementations","role":"collectionGroup","kind":"article","url":"\/documentation\/vhdlparsing\/indexedvalue\/equatable-implementations","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue\/Equatable-Implementations","abstract":[]},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation":{"kind":"symbol","role":"symbol","url":"\/documentation\/vhdlparsing\/castoperation","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation","abstract":[{"text":"A cast operation converting an expression to a specific ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalType"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CastOperation"}],"type":"topic","title":"CastOperation","navigatorTitle":[{"kind":"identifier","text":"CastOperation"}]},"doc://VHDLParsing/documentation/VHDLParsing/IndexedValue/init(index:value:)-ruut":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue\/init(index:value:)-ruut","url":"\/documentation\/vhdlparsing\/indexedvalue\/init(index:value:)-ruut","title":"init(index:value:)","role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Initialise an indexed value with an index and value."}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"VectorIndex","preciseIdentifier":"s:11VHDLParsing11VectorIndexO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Expression","preciseIdentifier":"s:11VHDLParsing10ExpressionO"},{"kind":"text","text":")"}]},"doc://VHDLParsing/documentation/VHDLParsing/Statement":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Statement","title":"Statement","url":"\/documentation\/vhdlparsing\/statement","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Statement","kind":"identifier"}],"navigatorTitle":[{"text":"Statement","kind":"identifier"}],"abstract":[{"type":"text","text":"A statement is a a full operation that contains expressions that resolve to some value or logic that is"},{"text":" ","type":"text"},{"type":"text","text":"performed."}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/IndexedVector":{"title":"IndexedVector","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedVector","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IndexedVector","kind":"identifier"}],"abstract":[{"text":"A type for representing vector literals that assign specific bit\/logic values to specific indices.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"IndexedVector","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/indexedvector","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/EdgeCondition":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EdgeCondition","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"EdgeCondition","kind":"identifier"}],"type":"topic","title":"EdgeCondition","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/EdgeCondition","abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ConditionalExpression","isActive":true,"type":"reference"},{"text":" that checks for the presence of a clocks edge.","type":"text"}],"url":"\/documentation\/vhdlparsing\/edgecondition"}}}