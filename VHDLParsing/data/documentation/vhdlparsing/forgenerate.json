{"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/VHDLParsing\/Se","doc:\/\/VHDLParsing\/SE","doc:\/\/VHDLParsing\/SQ","doc:\/\/VHDLParsing\/SH","doc:\/\/VHDLParsing\/SY","doc:\/\/VHDLParsing\/s8SendableP"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vhdlparsing\/forgenerate"]}],"sections":[],"seeAlsoSections":[{"generated":true,"title":"Asynchronous Blocks","identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousBlock","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousExpression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousStatement","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ComponentInstantiation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenerateBlock","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenericMap","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenericVariableMap","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/PortMap","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenBlock","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenStatement"]}],"hierarchy":{"paths":[["doc:\/\/VHDLParsing\/documentation\/VHDLParsing"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate\/init(label:iterator:range:body:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate\/init(rawValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate\/body","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate\/iterator","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate\/label","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate\/range","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate\/rawValue"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate\/Equatable-Implementations","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate\/RawRepresentable-Implementations"]}],"kind":"symbol","abstract":[{"text":"A generate expression utilising a ","type":"text"},{"code":"For","type":"codeVoice"},{"text":" loop.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"externalID":"s:11VHDLParsing11ForGenerateV","modules":[{"name":"VHDLParsing"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForGenerate"}],"symbolKind":"struct","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ForGenerate"}],"title":"ForGenerate","roleHeading":"Structure"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForGenerate"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"The for of this generate expression is:"}],"type":"paragraph"},{"code":["<label>: for <iterator> in <range> generate","    <body>","end generate <label>;"],"syntax":"VHDL","type":"codeListing"},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"reference","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableName","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorSize","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousBlock","isActive":true},{"type":"text","text":"."}]}],"name":"See Also"}],"kind":"content"}],"references":{"doc://VHDLParsing/documentation/VHDLParsing/ProcessBlock":{"kind":"symbol","abstract":[{"type":"text","text":"A struct for representing a process block."}],"role":"symbol","navigatorTitle":[{"text":"ProcessBlock","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ProcessBlock","kind":"identifier"}],"type":"topic","title":"ProcessBlock","url":"\/documentation\/vhdlparsing\/processblock"},"doc://VHDLParsing/documentation/VHDLParsing/ForGenerate/body":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate\/body","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11VHDLParsing17AsynchronousBlockO","text":"AsynchronousBlock","kind":"typeIdentifier"}],"kind":"symbol","title":"body","type":"topic","abstract":[{"text":"The body of the for-loop.","type":"text"}],"url":"\/documentation\/vhdlparsing\/forgenerate\/body"},"doc://VHDLParsing/documentation/VHDLParsing/VariableName":{"kind":"symbol","role":"symbol","url":"\/documentation\/vhdlparsing\/variablename","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableName","abstract":[{"text":"Valid VHDL variable names.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"VariableName","kind":"identifier"}],"type":"topic","title":"VariableName","navigatorTitle":[{"text":"VariableName","kind":"identifier"}]},"doc://VHDLParsing/documentation/VHDLParsing/ForGenerate/init(label:iterator:range:body:)":{"url":"\/documentation\/vhdlparsing\/forgenerate\/init(label:iterator:range:body:)","type":"topic","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate\/init(label:iterator:range:body:)","kind":"symbol","abstract":[{"type":"text","text":"Creates a new generate expression utilising a "},{"type":"codeVoice","code":"For"},{"type":"text","text":" loop."}],"role":"symbol","title":"init(label:iterator:range:body:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"label"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"VariableName","preciseIdentifier":"s:11VHDLParsing12VariableNameV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"iterator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"VariableName","preciseIdentifier":"s:11VHDLParsing12VariableNameV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"range"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"VectorSize","preciseIdentifier":"s:11VHDLParsing10VectorSizeO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsynchronousBlock","preciseIdentifier":"s:11VHDLParsing17AsynchronousBlockO"},{"kind":"text","text":")"}]},"doc://VHDLParsing/s8SendableP":{"identifier":"doc:\/\/VHDLParsing\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/PortMap":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/PortMap","title":"PortMap","url":"\/documentation\/vhdlparsing\/portmap","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PortMap"}],"navigatorTitle":[{"kind":"identifier","text":"PortMap"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"port map"},{"text":" declaration in ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":".","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/WhenElseStatement":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement","title":"WhenElseStatement","url":"\/documentation\/vhdlparsing\/whenelsestatement","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhenElseStatement"}],"navigatorTitle":[{"kind":"identifier","text":"WhenElseStatement"}],"abstract":[{"text":"A type for representing asynchronous ","type":"text"},{"type":"codeVoice","code":"when"},{"text":" statements with an ","type":"text"},{"type":"codeVoice","code":"else"},{"text":" clause.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/WhenBlock":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenBlock","title":"WhenBlock","url":"\/documentation\/vhdlparsing\/whenblock","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhenBlock"}],"navigatorTitle":[{"kind":"identifier","text":"WhenBlock"}],"abstract":[{"text":"A type for representing possible when statements.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/GenerateBlock":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenerateBlock","title":"GenerateBlock","url":"\/documentation\/vhdlparsing\/generateblock","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenerateBlock"}],"navigatorTitle":[{"kind":"identifier","text":"GenerateBlock"}],"abstract":[{"text":"A block that contains a generate statement.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/ForGenerate/iterator":{"role":"symbol","kind":"symbol","title":"iterator","type":"topic","url":"\/documentation\/vhdlparsing\/forgenerate\/iterator","abstract":[{"type":"text","text":"The iterator in the for-loop of this generate expression."}],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"iterator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing12VariableNameV","text":"VariableName"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate\/iterator"},"doc://VHDLParsing/documentation/VHDLParsing/ForGenerate/init(rawValue:)":{"title":"init(rawValue:)","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate\/init(rawValue:)","role":"symbol","url":"\/documentation\/vhdlparsing\/forgenerate\/init(rawvalue:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Creates a new generate expression utilising a "},{"type":"codeVoice","code":"For"},{"type":"text","text":" loop from it’s "},{"type":"codeVoice","code":"VHDL"},{"type":"text","text":" representation."}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":")"}]},"doc://VHDLParsing/SQ":{"identifier":"doc:\/\/VHDLParsing\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/AsynchronousExpression":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousExpression"}],"title":"AsynchronousExpression","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsynchronousExpression"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousExpression","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Expressions that can be used in asynchronous code."}],"url":"\/documentation\/vhdlparsing\/asynchronousexpression"},"doc://VHDLParsing/documentation/VHDLParsing/AsynchronousStatement":{"kind":"symbol","abstract":[{"type":"text","text":"A statement that can exist within asynchronous code."}],"role":"symbol","navigatorTitle":[{"text":"AsynchronousStatement","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousStatement","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousStatement","kind":"identifier"}],"type":"topic","title":"AsynchronousStatement","url":"\/documentation\/vhdlparsing\/asynchronousstatement"},"doc://VHDLParsing/documentation/VHDLParsing":{"kind":"symbol","url":"\/documentation\/vhdlparsing","abstract":[],"role":"collection","title":"VHDLParsing","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/ForGenerate/RawRepresentable-Implementations":{"url":"\/documentation\/vhdlparsing\/forgenerate\/rawrepresentable-implementations","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate\/RawRepresentable-Implementations","kind":"article","title":"RawRepresentable Implementations"},"doc://VHDLParsing/SE":{"identifier":"doc:\/\/VHDLParsing\/SE","title":"Swift.Encodable","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/ForGenerate/range":{"title":"range","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"range"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11VHDLParsing10VectorSizeO","kind":"typeIdentifier","text":"VectorSize"}],"type":"topic","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate\/range","abstract":[{"text":"The range the iterator will iterate over.","type":"text"}],"url":"\/documentation\/vhdlparsing\/forgenerate\/range","kind":"symbol","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/AsynchronousBlock":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousBlock","title":"AsynchronousBlock","url":"\/documentation\/vhdlparsing\/asynchronousblock","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousBlock"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousBlock"}],"abstract":[{"text":"A block of code that exists within an architecture body.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/ForGenerate/rawValue":{"role":"symbol","abstract":[{"text":"The equivalent ","type":"text"},{"code":"VHDL","type":"codeVoice"},{"text":" code enacting this generate statement.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate\/rawValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"title":"rawValue","type":"topic","kind":"symbol","url":"\/documentation\/vhdlparsing\/forgenerate\/rawvalue"},"doc://VHDLParsing/SY":{"identifier":"doc:\/\/VHDLParsing\/SY","title":"Swift.RawRepresentable","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/GenericVariableMap":{"title":"GenericVariableMap","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenericVariableMap","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericVariableMap"}],"abstract":[{"type":"text","text":"An operation that maps 2 generics together."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"GenericVariableMap"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/genericvariablemap","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/GenericMap":{"title":"GenericMap","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenericMap","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericMap"}],"abstract":[{"text":"A ","type":"text"},{"code":"generic map","type":"codeVoice"},{"text":" in ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":".","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"GenericMap"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/genericmap","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/WhenStatement":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenStatement","title":"WhenStatement","url":"\/documentation\/vhdlparsing\/whenstatement","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhenStatement"}],"navigatorTitle":[{"kind":"identifier","text":"WhenStatement"}],"abstract":[{"text":"An expression using a ","type":"text"},{"type":"codeVoice","code":"when"},{"text":" conditional.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/ComponentInstantiation":{"url":"\/documentation\/vhdlparsing\/componentinstantiation","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComponentInstantiation"}],"type":"topic","title":"ComponentInstantiation","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ComponentInstantiation"}],"abstract":[{"text":"A component instantiation in ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":".","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ComponentInstantiation","role":"symbol"},"doc://VHDLParsing/Se":{"identifier":"doc:\/\/VHDLParsing\/Se","title":"Swift.Decodable","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/ForGenerate/label":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"label","kind":"identifier"},{"text":": ","kind":"text"},{"text":"VariableName","preciseIdentifier":"s:11VHDLParsing12VariableNameV","kind":"typeIdentifier"}],"role":"symbol","type":"topic","url":"\/documentation\/vhdlparsing\/forgenerate\/label","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate\/label","abstract":[{"text":"The label of the generate expression.","type":"text"}],"title":"label","kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/ForGenerate/Equatable-Implementations":{"url":"\/documentation\/vhdlparsing\/forgenerate\/equatable-implementations","title":"Equatable Implementations","role":"collectionGroup","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate\/Equatable-Implementations","kind":"article","abstract":[],"type":"topic"},"doc://VHDLParsing/SH":{"identifier":"doc:\/\/VHDLParsing\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/ForGenerate":{"kind":"symbol","abstract":[{"type":"text","text":"A generate expression utilising a "},{"code":"For","type":"codeVoice"},{"type":"text","text":" loop."}],"role":"symbol","navigatorTitle":[{"text":"ForGenerate","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForGenerate","kind":"identifier"}],"type":"topic","title":"ForGenerate","url":"\/documentation\/vhdlparsing\/forgenerate"},"doc://VHDLParsing/documentation/VHDLParsing/VectorSize":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VectorSize","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"VectorSize","kind":"identifier"}],"type":"topic","title":"VectorSize","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorSize","abstract":[{"text":"A type for representing VHDL vector sizes.","type":"text"}],"url":"\/documentation\/vhdlparsing\/vectorsize"}}}