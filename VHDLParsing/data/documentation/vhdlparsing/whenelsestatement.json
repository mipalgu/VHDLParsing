{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement"},"seeAlsoSections":[{"title":"Asynchronous Blocks","identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousBlock","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousExpression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousStatement","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ComponentInstantiation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenerateBlock","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenericMap","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenericVariableMap","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/PortMap","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenBlock","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenStatement"],"generated":true}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/vhdlparsing\/whenelsestatement"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhenElseStatement"}]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/VHDLParsing\/documentation\/VHDLParsing"]]},"abstract":[{"text":"A type for representing asynchronous ","type":"text"},{"type":"codeVoice","code":"when"},{"text":" statements with an ","type":"text"},{"type":"codeVoice","code":"else"},{"text":" clause.","type":"text"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement\/init(rawValue:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement\/init(value:condition:elseBlock:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement\/condition","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement\/elseBlock","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement\/rawValue","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement\/value"]},{"title":"Default Implementations","identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement\/Equatable-Implementations","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement\/RawRepresentable-Implementations"],"generated":true}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/VHDLParsing\/Se","doc:\/\/VHDLParsing\/SE","doc:\/\/VHDLParsing\/SQ","doc:\/\/VHDLParsing\/SH","doc:\/\/VHDLParsing\/SY","doc:\/\/VHDLParsing\/s8SendableP"]}],"metadata":{"modules":[{"name":"VHDLParsing"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhenElseStatement"}],"title":"WhenElseStatement","externalID":"s:11VHDLParsing17WhenElseStatementV","symbolKind":"struct","role":"symbol","roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"WhenElseStatement"}]},"kind":"symbol","sections":[],"references":{"doc://VHDLParsing/documentation/VHDLParsing/WhenElseStatement/Equatable-Implementations":{"abstract":[],"kind":"article","type":"topic","url":"\/documentation\/vhdlparsing\/whenelsestatement\/equatable-implementations","title":"Equatable Implementations","role":"collectionGroup","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement\/Equatable-Implementations"},"doc://VHDLParsing/documentation/VHDLParsing/WhenElseStatement/rawValue":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement\/rawValue","url":"\/documentation\/vhdlparsing\/whenelsestatement\/rawvalue","abstract":[{"text":"The equivalent ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":" code of this statement.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rawValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"type":"topic","title":"rawValue"},"doc://VHDLParsing/SH":{"identifier":"doc:\/\/VHDLParsing\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://VHDLParsing/documentation/VHDLParsing/WhenElseStatement/RawRepresentable-Implementations":{"kind":"article","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement\/RawRepresentable-Implementations","type":"topic","title":"RawRepresentable Implementations","url":"\/documentation\/vhdlparsing\/whenelsestatement\/rawrepresentable-implementations"},"doc://VHDLParsing/documentation/VHDLParsing/WhenElseStatement/init(rawValue:)":{"kind":"symbol","abstract":[{"text":"Creates a new ","type":"text"},{"code":"when","type":"codeVoice"},{"type":"text","text":" statement with an "},{"code":"else","type":"codeVoice"},{"text":" clause from the specified ","type":"text"},{"code":"VHDL","type":"codeVoice"},{"text":" code.","type":"text"}],"role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement\/init(rawValue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"type":"topic","title":"init(rawValue:)","url":"\/documentation\/vhdlparsing\/whenelsestatement\/init(rawvalue:)"},"doc://VHDLParsing/documentation/VHDLParsing/GenericMap":{"title":"GenericMap","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenericMap","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericMap"}],"abstract":[{"text":"A ","type":"text"},{"code":"generic map","type":"codeVoice"},{"text":" in ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":".","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"GenericMap"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/genericmap","type":"topic"},"doc://VHDLParsing/SQ":{"identifier":"doc:\/\/VHDLParsing\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://VHDLParsing/documentation/VHDLParsing/WhenStatement":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenStatement","title":"WhenStatement","url":"\/documentation\/vhdlparsing\/whenstatement","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhenStatement"}],"navigatorTitle":[{"kind":"identifier","text":"WhenStatement"}],"abstract":[{"text":"An expression using a ","type":"text"},{"type":"codeVoice","code":"when"},{"text":" conditional.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/ComponentInstantiation":{"url":"\/documentation\/vhdlparsing\/componentinstantiation","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComponentInstantiation"}],"type":"topic","title":"ComponentInstantiation","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ComponentInstantiation"}],"abstract":[{"text":"A component instantiation in ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":".","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ComponentInstantiation","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/ProcessBlock":{"kind":"symbol","abstract":[{"type":"text","text":"A struct for representing a process block."}],"role":"symbol","navigatorTitle":[{"text":"ProcessBlock","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ProcessBlock","kind":"identifier"}],"type":"topic","title":"ProcessBlock","url":"\/documentation\/vhdlparsing\/processblock"},"doc://VHDLParsing/documentation/VHDLParsing/AsynchronousExpression":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousExpression"}],"title":"AsynchronousExpression","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsynchronousExpression"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousExpression","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Expressions that can be used in asynchronous code."}],"url":"\/documentation\/vhdlparsing\/asynchronousexpression"},"doc://VHDLParsing/documentation/VHDLParsing/WhenElseStatement/init(value:condition:elseBlock:)":{"url":"\/documentation\/vhdlparsing\/whenelsestatement\/init(value:condition:elseblock:)","role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11VHDLParsing10ExpressionO","text":"Expression","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"condition","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Expression","preciseIdentifier":"s:11VHDLParsing10ExpressionO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"elseBlock"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsynchronousExpression","preciseIdentifier":"s:11VHDLParsing22AsynchronousExpressionO"},{"kind":"text","text":")"}],"title":"init(value:condition:elseBlock:)","abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"when"},{"type":"text","text":" statement with an "},{"type":"codeVoice","code":"else"},{"text":" clause.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement\/init(value:condition:elseBlock:)"},"doc://VHDLParsing/SE":{"identifier":"doc:\/\/VHDLParsing\/SE","type":"unresolvable","title":"Swift.Encodable"},"doc://VHDLParsing/documentation/VHDLParsing/WhenElseStatement":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement","title":"WhenElseStatement","url":"\/documentation\/vhdlparsing\/whenelsestatement","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhenElseStatement"}],"navigatorTitle":[{"kind":"identifier","text":"WhenElseStatement"}],"abstract":[{"text":"A type for representing asynchronous ","type":"text"},{"type":"codeVoice","code":"when"},{"text":" statements with an ","type":"text"},{"type":"codeVoice","code":"else"},{"text":" clause.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/WhenElseStatement/value":{"kind":"symbol","abstract":[{"type":"text","text":"The value to assign when the "},{"type":"codeVoice","code":"condition"},{"type":"text","text":" evaluates to "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}],"role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement\/value","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11VHDLParsing10ExpressionO","kind":"typeIdentifier","text":"Expression"}],"type":"topic","title":"value","url":"\/documentation\/vhdlparsing\/whenelsestatement\/value"},"doc://VHDLParsing/documentation/VHDLParsing/AsynchronousBlock":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousBlock","title":"AsynchronousBlock","url":"\/documentation\/vhdlparsing\/asynchronousblock","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousBlock"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousBlock"}],"abstract":[{"text":"A block of code that exists within an architecture body.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing":{"kind":"symbol","url":"\/documentation\/vhdlparsing","abstract":[],"role":"collection","title":"VHDLParsing","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing","type":"topic"},"doc://VHDLParsing/Se":{"identifier":"doc:\/\/VHDLParsing\/Se","type":"unresolvable","title":"Swift.Decodable"},"doc://VHDLParsing/SY":{"identifier":"doc:\/\/VHDLParsing\/SY","type":"unresolvable","title":"Swift.RawRepresentable"},"doc://VHDLParsing/documentation/VHDLParsing/GenerateBlock":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenerateBlock","title":"GenerateBlock","url":"\/documentation\/vhdlparsing\/generateblock","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenerateBlock"}],"navigatorTitle":[{"kind":"identifier","text":"GenerateBlock"}],"abstract":[{"text":"A block that contains a generate statement.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/WhenBlock":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenBlock","title":"WhenBlock","url":"\/documentation\/vhdlparsing\/whenblock","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhenBlock"}],"navigatorTitle":[{"kind":"identifier","text":"WhenBlock"}],"abstract":[{"text":"A type for representing possible when statements.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/WhenElseStatement/condition":{"url":"\/documentation\/vhdlparsing\/whenelsestatement\/condition","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"condition"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11VHDLParsing10ExpressionO","kind":"typeIdentifier","text":"Expression"}],"title":"condition","abstract":[{"text":"The condition of the ","type":"text"},{"type":"codeVoice","code":"when"},{"text":" statement.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement\/condition"},"doc://VHDLParsing/documentation/VHDLParsing/ForGenerate":{"kind":"symbol","abstract":[{"type":"text","text":"A generate expression utilising a "},{"code":"For","type":"codeVoice"},{"type":"text","text":" loop."}],"role":"symbol","navigatorTitle":[{"text":"ForGenerate","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForGenerate","kind":"identifier"}],"type":"topic","title":"ForGenerate","url":"\/documentation\/vhdlparsing\/forgenerate"},"doc://VHDLParsing/s8SendableP":{"identifier":"doc:\/\/VHDLParsing\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://VHDLParsing/documentation/VHDLParsing/AsynchronousStatement":{"kind":"symbol","abstract":[{"type":"text","text":"A statement that can exist within asynchronous code."}],"role":"symbol","navigatorTitle":[{"text":"AsynchronousStatement","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousStatement","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousStatement","kind":"identifier"}],"type":"topic","title":"AsynchronousStatement","url":"\/documentation\/vhdlparsing\/asynchronousstatement"},"doc://VHDLParsing/documentation/VHDLParsing/PortMap":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/PortMap","title":"PortMap","url":"\/documentation\/vhdlparsing\/portmap","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PortMap"}],"navigatorTitle":[{"kind":"identifier","text":"PortMap"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"port map"},{"text":" declaration in ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":".","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/GenericVariableMap":{"title":"GenericVariableMap","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenericVariableMap","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericVariableMap"}],"abstract":[{"type":"text","text":"An operation that maps 2 generics together."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"GenericVariableMap"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/genericvariablemap","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/WhenElseStatement/elseBlock":{"title":"elseBlock","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"elseBlock"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11VHDLParsing22AsynchronousExpressionO","kind":"typeIdentifier","text":"AsynchronousExpression"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"The "},{"code":"else","type":"codeVoice"},{"type":"text","text":" clause of the "},{"code":"when","type":"codeVoice"},{"type":"text","text":" statement."}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement\/elseBlock","url":"\/documentation\/vhdlparsing\/whenelsestatement\/elseblock","kind":"symbol"}}}