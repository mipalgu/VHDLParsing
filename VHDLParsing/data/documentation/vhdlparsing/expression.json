{"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/binary(operation:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/cast(operation:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/conditional(condition:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/functionCall(call:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/literal(value:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/logical(operation:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/precedence(value:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/reference(variable:)"],"title":"Enumeration Cases"},{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/init(rawValue:)"],"title":"Initializers"},{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/description","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/rawValue-swift.property"],"title":"Instance Properties"},{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/RawValue-swift.typealias"],"title":"Type Aliases"},{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/Equatable-Implementations","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/RawRepresentable-Implementations"],"title":"Default Implementations","generated":true}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vhdlparsing\/expression"]}],"hierarchy":{"paths":[["doc:\/\/VHDLParsing\/documentation\/VHDLParsing"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BinaryOperation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ComparisonOperation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ConditionalExpression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CustomFunctionCall","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/DirectReference","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/EdgeCondition","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCall","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCallable","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedVector","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MathRealFunctionCalls","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Statement","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableAssignment","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableReference","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorIndex","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorSize"],"title":"Basic Arithmetic","generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression"},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"indirect"},{"kind":"text","text":" "},{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Expression"}]}]},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Typical expressions would include all operations after the "},{"type":"codeVoice","code":"<="},{"type":"text","text":" symbol in a "},{"type":"codeVoice","code":"VHDL"},{"type":"text","text":" assignment operation."},{"type":"text","text":" "},{"type":"text","text":"Some examples include arithmetic operations (+, -, \/, *), comparison operations (>, <, <=, >=, =, \/=),"},{"type":"text","text":" "},{"type":"text","text":"bitwise operations (sll, srl, sla, sra, rol, ror), and may include references to pre-defined variables or"},{"type":"text","text":" "},{"type":"text","text":"literal values. This type should not be used to describe branch statements such as "},{"type":"codeVoice","code":"if"},{"type":"text","text":" or "},{"type":"codeVoice","code":"case"},{"type":"text","text":" "},{"type":"text","text":"statements, or loops such as "},{"type":"codeVoice","code":"for"},{"type":"text","text":" and "},{"type":"codeVoice","code":"while"},{"type":"text","text":" loops. For those types of expressions, use"},{"type":"text","text":" "},{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SynchronousBlock","type":"reference","isActive":true},{"type":"text","text":"."}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SynchronousBlock","type":"reference","isActive":true},{"type":"text","text":"."}]}],"name":"See Also","type":"aside","style":"note"}],"kind":"content"}],"relationshipsSections":[{"identifiers":["doc:\/\/VHDLParsing\/s23CustomStringConvertibleP","doc:\/\/VHDLParsing\/Se","doc:\/\/VHDLParsing\/SE","doc:\/\/VHDLParsing\/SQ","doc:\/\/VHDLParsing\/SH","doc:\/\/VHDLParsing\/SY","doc:\/\/VHDLParsing\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"abstract":[{"text":"An ","type":"text"},{"code":"Expression","type":"codeVoice"},{"text":" represents a stand-alone statement that resolves to some value in ","type":"text"},{"code":"VHDL","type":"codeVoice"},{"text":".","type":"text"}],"metadata":{"modules":[{"name":"VHDLParsing"}],"role":"symbol","symbolKind":"enum","externalID":"s:11VHDLParsing10ExpressionO","roleHeading":"Enumeration","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Expression","kind":"identifier"}],"title":"Expression","navigatorTitle":[{"text":"Expression","kind":"identifier"}]},"references":{"doc://VHDLParsing/documentation/VHDLParsing/VariableReference":{"navigatorTitle":[{"text":"VariableReference","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/variablereference","abstract":[{"text":"A type for defining types of references to a variable.","type":"text"}],"role":"symbol","title":"VariableReference","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"VariableReference","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableReference","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/Expression/RawRepresentable-Implementations":{"abstract":[],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/RawRepresentable-Implementations","url":"\/documentation\/vhdlparsing\/expression\/rawrepresentable-implementations","title":"RawRepresentable Implementations","kind":"article","type":"topic","role":"collectionGroup"},"doc://VHDLParsing/documentation/VHDLParsing/VectorIndex":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"VectorIndex"}],"title":"VectorIndex","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"VectorIndex"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorIndex","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An index of a vector in "},{"type":"codeVoice","code":"VHDL"},{"type":"text","text":"."}],"url":"\/documentation\/vhdlparsing\/vectorindex"},"doc://VHDLParsing/documentation/VHDLParsing/Statement":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Statement","title":"Statement","url":"\/documentation\/vhdlparsing\/statement","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Statement","kind":"identifier"}],"navigatorTitle":[{"text":"Statement","kind":"identifier"}],"abstract":[{"type":"text","text":"A statement is a a full operation that contains expressions that resolve to some value or logic that is"},{"text":" ","type":"text"},{"type":"text","text":"performed."}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/CustomFunctionCall":{"title":"CustomFunctionCall","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CustomFunctionCall","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomFunctionCall"}],"abstract":[{"type":"text","text":"A custom function call."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CustomFunctionCall"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/customfunctioncall","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/Expression/logical(operation:)":{"url":"\/documentation\/vhdlparsing\/expression\/logical(operation:)","kind":"symbol","title":"Expression.logical(operation:)","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logical","kind":"identifier"},{"text":"(","kind":"text"},{"text":"operation","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11VHDLParsing17BooleanExpressionO","text":"BooleanExpression","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/logical(operation:)","abstract":[{"text":"A boolean logic expression.","type":"text"}]},"doc://VHDLParsing/documentation/VHDLParsing/FunctionCall":{"title":"FunctionCall","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCall","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"FunctionCall"}],"abstract":[{"text":"This type represents ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":" code that is enacting a function call.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FunctionCall"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/functioncall","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/Expression/conditional(condition:)":{"url":"\/documentation\/vhdlparsing\/expression\/conditional(condition:)","kind":"symbol","title":"Expression.conditional(condition:)","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"conditional","kind":"identifier"},{"text":"(","kind":"text"},{"text":"condition","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11VHDLParsing21ConditionalExpressionO","text":"ConditionalExpression","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/conditional(condition:)","abstract":[{"text":"A conditional expression.","type":"text"}]},"doc://VHDLParsing/Se":{"title":"Swift.Decodable","type":"unresolvable","identifier":"doc:\/\/VHDLParsing\/Se"},"doc://VHDLParsing/documentation/VHDLParsing/Expression/description":{"type":"topic","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/description","title":"description","role":"symbol","kind":"symbol","url":"\/documentation\/vhdlparsing\/expression\/description","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"abstract":[{"text":"The equivalent VHDL code of this expression.","type":"text"}]},"doc://VHDLParsing/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/VHDLParsing\/s8SendableP"},"doc://VHDLParsing/SE":{"title":"Swift.Encodable","type":"unresolvable","identifier":"doc:\/\/VHDLParsing\/SE"},"doc://VHDLParsing/documentation/VHDLParsing":{"kind":"symbol","url":"\/documentation\/vhdlparsing","abstract":[],"role":"collection","title":"VHDLParsing","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/Expression/init(rawValue:)":{"url":"\/documentation\/vhdlparsing\/expression\/init(rawvalue:)","kind":"symbol","title":"init(rawValue:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/init(rawValue:)","abstract":[{"type":"text","text":"Create an "},{"code":"Expression","type":"codeVoice"},{"type":"text","text":" from valid VHDL code."}]},"doc://VHDLParsing/documentation/VHDLParsing/Expression/rawValue-swift.property":{"url":"\/documentation\/vhdlparsing\/expression\/rawvalue-swift.property","role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The equivalent VHDL code of this expression."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/rawValue-swift.property","title":"rawValue"},"doc://VHDLParsing/SY":{"identifier":"doc:\/\/VHDLParsing\/SY","title":"Swift.RawRepresentable","type":"unresolvable"},"doc://VHDLParsing/SH":{"identifier":"doc:\/\/VHDLParsing\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/VariableAssignment":{"title":"VariableAssignment","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableAssignment","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VariableAssignment","kind":"identifier"}],"abstract":[{"text":"A variable assignment exists within a port map and is used to assign a port to a variable.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"VariableAssignment","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/variableassignment","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/Expression/precedence(value:)":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"precedence","kind":"identifier"},{"text":"(","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Expression","preciseIdentifier":"s:11VHDLParsing10ExpressionO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/precedence(value:)","abstract":[{"type":"text","text":"A precedence operation. This is equivalent to placing brackets around an Expression."}],"title":"Expression.precedence(value:)","type":"topic","url":"\/documentation\/vhdlparsing\/expression\/precedence(value:)"},"doc://VHDLParsing/documentation/VHDLParsing/Expression/RawValue-swift.typealias":{"type":"topic","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/RawValue-swift.typealias","role":"symbol","navigatorTitle":[{"text":"RawValue","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RawValue","kind":"identifier"}],"url":"\/documentation\/vhdlparsing\/expression\/rawvalue-swift.typealias","abstract":[{"text":"The raw value is a string.","type":"text"}],"kind":"symbol","title":"Expression.RawValue"},"doc://VHDLParsing/documentation/VHDLParsing/BinaryOperation":{"url":"\/documentation\/vhdlparsing\/binaryoperation","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"BinaryOperation","kind":"identifier"}],"type":"topic","title":"BinaryOperation","kind":"symbol","navigatorTitle":[{"text":"BinaryOperation","kind":"identifier"}],"abstract":[{"text":"A type for representing arithmetic operations that work with two operands.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BinaryOperation","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/Expression":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Expression"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Expression"}],"type":"topic","title":"Expression","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression","abstract":[{"text":"An ","type":"text"},{"code":"Expression","type":"codeVoice"},{"text":" represents a stand-alone statement that resolves to some value in ","type":"text"},{"code":"VHDL","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/vhdlparsing\/expression"},"doc://VHDLParsing/s23CustomStringConvertibleP":{"identifier":"doc:\/\/VHDLParsing\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/DirectReference":{"navigatorTitle":[{"kind":"identifier","text":"DirectReference"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/directreference","abstract":[{"type":"text","text":"A direct reference is a reference to a variable via it’s name or member access in a record type."}],"role":"symbol","title":"DirectReference","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DirectReference"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/DirectReference","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/Expression/cast(operation:)":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"operation","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CastOperation","preciseIdentifier":"s:11VHDLParsing13CastOperationO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/cast(operation:)","abstract":[{"type":"text","text":"A type-cast operation."}],"title":"Expression.cast(operation:)","type":"topic","url":"\/documentation\/vhdlparsing\/expression\/cast(operation:)"},"doc://VHDLParsing/documentation/VHDLParsing/IndexedVector":{"title":"IndexedVector","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedVector","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IndexedVector","kind":"identifier"}],"abstract":[{"text":"A type for representing vector literals that assign specific bit\/logic values to specific indices.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"IndexedVector","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/indexedvector","type":"topic"},"doc://VHDLParsing/SQ":{"identifier":"doc:\/\/VHDLParsing\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://VHDLParsing/documentation/VHDLParsing/ConditionalExpression":{"url":"\/documentation\/vhdlparsing\/conditionalexpression","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConditionalExpression"}],"type":"topic","title":"ConditionalExpression","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ConditionalExpression"}],"abstract":[{"text":"A type for representing expression that can be used in a conditional statement.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ConditionalExpression","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/MathRealFunctionCalls":{"url":"\/documentation\/vhdlparsing\/mathrealfunctioncalls","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MathRealFunctionCalls"}],"type":"topic","title":"MathRealFunctionCalls","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MathRealFunctionCalls"}],"abstract":[{"text":"A function call where the function being called exists within the ","type":"text"},{"type":"codeVoice","code":"math_real"},{"text":" package.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MathRealFunctionCalls","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/Expression/Equatable-Implementations":{"type":"topic","title":"Equatable Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/Equatable-Implementations","role":"collectionGroup","url":"\/documentation\/vhdlparsing\/expression\/equatable-implementations"},"doc://VHDLParsing/documentation/VHDLParsing/VariableMap":{"url":"\/documentation\/vhdlparsing\/variablemap","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"VariableMap","kind":"identifier"}],"type":"topic","title":"VariableMap","kind":"symbol","navigatorTitle":[{"text":"VariableMap","kind":"identifier"}],"abstract":[{"text":"An operation that maps 2 signals together.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/MemberAccess":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MemberAccess"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MemberAccess"}],"type":"topic","title":"MemberAccess","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess","abstract":[{"type":"text","text":"An expression accessing a member within a record instance."}],"url":"\/documentation\/vhdlparsing\/memberaccess"},"doc://VHDLParsing/documentation/VHDLParsing/Expression/binary(operation:)":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binary","kind":"identifier"},{"text":"(","kind":"text"},{"text":"operation","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"BinaryOperation","preciseIdentifier":"s:11VHDLParsing15BinaryOperationO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/binary(operation:)","abstract":[{"type":"text","text":"An arithmetic expression that uses two operands."}],"title":"Expression.binary(operation:)","type":"topic","url":"\/documentation\/vhdlparsing\/expression\/binary(operation:)"},"doc://VHDLParsing/documentation/VHDLParsing/EdgeCondition":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EdgeCondition","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"EdgeCondition","kind":"identifier"}],"type":"topic","title":"EdgeCondition","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/EdgeCondition","abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ConditionalExpression","isActive":true,"type":"reference"},{"text":" that checks for the presence of a clocks edge.","type":"text"}],"url":"\/documentation\/vhdlparsing\/edgecondition"},"doc://VHDLParsing/documentation/VHDLParsing/SynchronousBlock":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SynchronousBlock","title":"SynchronousBlock","url":"\/documentation\/vhdlparsing\/synchronousblock","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SynchronousBlock"}],"navigatorTitle":[{"kind":"identifier","text":"SynchronousBlock"}],"abstract":[{"text":"A type for representing code that exists within a ","type":"text"},{"type":"codeVoice","code":"process"},{"text":" block in ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":".","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/SignalType":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"SignalType","kind":"identifier"}],"title":"SignalType","kind":"symbol","navigatorTitle":[{"text":"SignalType","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalType","role":"symbol","type":"topic","abstract":[{"text":"Valid VHDL Signal types.","type":"text"}],"url":"\/documentation\/vhdlparsing\/signaltype"},"doc://VHDLParsing/documentation/VHDLParsing/Expression/reference(variable:)":{"role":"symbol","kind":"symbol","type":"topic","title":"Expression.reference(variable:)","url":"\/documentation\/vhdlparsing\/expression\/reference(variable:)","abstract":[{"text":"A reference to a variable.","type":"text"}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"reference"},{"kind":"text","text":"("},{"kind":"externalParam","text":"variable"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11VHDLParsing17VariableReferenceO","kind":"typeIdentifier","text":"VariableReference"},{"kind":"text","text":")"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/reference(variable:)"},"doc://VHDLParsing/documentation/VHDLParsing/ComparisonOperation":{"title":"ComparisonOperation","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ComparisonOperation","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComparisonOperation"}],"abstract":[{"text":"A type for representing VHDL comparison operations.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ComparisonOperation"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/comparisonoperation","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/Expression/literal(value:)":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/literal(value:)","title":"Expression.literal(value:)","kind":"symbol","url":"\/documentation\/vhdlparsing\/expression\/literal(value:)","abstract":[{"text":"A literal value.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"literal","kind":"identifier"},{"text":"(","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11VHDLParsing13SignalLiteralO","text":"SignalLiteral","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://VHDLParsing/documentation/VHDLParsing/FunctionCallable":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCallable","title":"FunctionCallable","url":"\/documentation\/vhdlparsing\/functioncallable","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FunctionCallable"}],"navigatorTitle":[{"kind":"identifier","text":"FunctionCallable"}],"abstract":[{"text":"Helper protocol for defining types that can be executed as a function call.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation":{"kind":"symbol","role":"symbol","url":"\/documentation\/vhdlparsing\/castoperation","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation","abstract":[{"text":"A cast operation converting an expression to a specific ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalType"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CastOperation"}],"type":"topic","title":"CastOperation","navigatorTitle":[{"kind":"identifier","text":"CastOperation"}]},"doc://VHDLParsing/documentation/VHDLParsing/BooleanExpression":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BooleanExpression"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BooleanExpression"}],"type":"topic","title":"BooleanExpression","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression","abstract":[{"type":"text","text":"A boolean expression containing common boolean operations."}],"url":"\/documentation\/vhdlparsing\/booleanexpression"},"doc://VHDLParsing/documentation/VHDLParsing/VectorSize":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VectorSize","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"VectorSize","kind":"identifier"}],"type":"topic","title":"VectorSize","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorSize","abstract":[{"text":"A type for representing VHDL vector sizes.","type":"text"}],"url":"\/documentation\/vhdlparsing\/vectorsize"},"doc://VHDLParsing/documentation/VHDLParsing/Expression/functionCall(call:)":{"url":"\/documentation\/vhdlparsing\/expression\/functioncall(call:)","title":"Expression.functionCall(call:)","type":"topic","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression\/functionCall(call:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"functionCall"},{"text":"(","kind":"text"},{"text":"call","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FunctionCall","preciseIdentifier":"s:11VHDLParsing12FunctionCallO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A function call."}]},"doc://VHDLParsing/documentation/VHDLParsing/IndexedValue":{"navigatorTitle":[{"kind":"identifier","text":"IndexedValue"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/indexedvalue","abstract":[{"text":"This type represents a value for a specific index in a vector type within ","type":"text"},{"code":"VHDL","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","title":"IndexedValue","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IndexedValue"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue","type":"topic"}}}