{"variants":[{"paths":["\/documentation\/vhdlparsing\/asynchronousstatement"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousStatement","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousStatement"}]}],"kind":"declarations"}],"sections":[],"abstract":[{"text":"A statement that can exist within asynchronous code.","type":"text"}],"seeAlsoSections":[{"title":"Asynchronous Blocks","identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousBlock","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousExpression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ComponentInstantiation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenerateBlock","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenericMap","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenericVariableMap","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/PortMap","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenBlock","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenStatement"],"generated":true}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/VHDLParsing\/documentation\/VHDLParsing"]]},"metadata":{"navigatorTitle":[{"text":"AsynchronousStatement","kind":"identifier"}],"externalID":"s:11VHDLParsing21AsynchronousStatementO","symbolKind":"enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousStatement","kind":"identifier"}],"roleHeading":"Enumeration","role":"symbol","title":"AsynchronousStatement","modules":[{"name":"VHDLParsing"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousStatement\/assignment(name:value:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousStatement\/comment(value:)"]},{"title":"Initializers","identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousStatement\/init(rawValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousStatement\/rawValue"]},{"title":"Default Implementations","identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousStatement\/Equatable-Implementations","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousStatement\/RawRepresentable-Implementations"],"generated":true}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/VHDLParsing\/Se","doc:\/\/VHDLParsing\/SE","doc:\/\/VHDLParsing\/SQ","doc:\/\/VHDLParsing\/SH","doc:\/\/VHDLParsing\/SY","doc:\/\/VHDLParsing\/s8SendableP"]}],"references":{"doc://VHDLParsing/s8SendableP":{"identifier":"doc:\/\/VHDLParsing\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://VHDLParsing/documentation/VHDLParsing/WhenStatement":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenStatement","title":"WhenStatement","url":"\/documentation\/vhdlparsing\/whenstatement","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhenStatement"}],"navigatorTitle":[{"kind":"identifier","text":"WhenStatement"}],"abstract":[{"text":"An expression using a ","type":"text"},{"type":"codeVoice","code":"when"},{"text":" conditional.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/GenericMap":{"title":"GenericMap","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenericMap","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericMap"}],"abstract":[{"text":"A ","type":"text"},{"code":"generic map","type":"codeVoice"},{"text":" in ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":".","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"GenericMap"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/genericmap","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/AsynchronousStatement/rawValue":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousStatement\/rawValue","abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":" code of this statement.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/vhdlparsing\/asynchronousstatement\/rawvalue","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rawValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"title":"rawValue"},"doc://VHDLParsing/documentation/VHDLParsing/GenerateBlock":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenerateBlock","title":"GenerateBlock","url":"\/documentation\/vhdlparsing\/generateblock","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenerateBlock"}],"navigatorTitle":[{"kind":"identifier","text":"GenerateBlock"}],"abstract":[{"text":"A block that contains a generate statement.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/Se":{"identifier":"doc:\/\/VHDLParsing\/Se","type":"unresolvable","title":"Swift.Decodable"},"doc://VHDLParsing/documentation/VHDLParsing/ProcessBlock":{"kind":"symbol","abstract":[{"type":"text","text":"A struct for representing a process block."}],"role":"symbol","navigatorTitle":[{"text":"ProcessBlock","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ProcessBlock","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ProcessBlock","kind":"identifier"}],"type":"topic","title":"ProcessBlock","url":"\/documentation\/vhdlparsing\/processblock"},"doc://VHDLParsing/SY":{"identifier":"doc:\/\/VHDLParsing\/SY","type":"unresolvable","title":"Swift.RawRepresentable"},"doc://VHDLParsing/documentation/VHDLParsing/GenericVariableMap":{"title":"GenericVariableMap","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/GenericVariableMap","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericVariableMap"}],"abstract":[{"type":"text","text":"An operation that maps 2 generics together."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"GenericVariableMap"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/genericvariablemap","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/AsynchronousStatement/Equatable-Implementations":{"title":"Equatable Implementations","abstract":[],"kind":"article","url":"\/documentation\/vhdlparsing\/asynchronousstatement\/equatable-implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousStatement\/Equatable-Implementations"},"doc://VHDLParsing/documentation/VHDLParsing/WhenBlock":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenBlock","title":"WhenBlock","url":"\/documentation\/vhdlparsing\/whenblock","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhenBlock"}],"navigatorTitle":[{"kind":"identifier","text":"WhenBlock"}],"abstract":[{"text":"A type for representing possible when statements.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/AsynchronousExpression":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousExpression"}],"title":"AsynchronousExpression","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsynchronousExpression"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousExpression","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Expressions that can be used in asynchronous code."}],"url":"\/documentation\/vhdlparsing\/asynchronousexpression"},"doc://VHDLParsing/SE":{"identifier":"doc:\/\/VHDLParsing\/SE","type":"unresolvable","title":"Swift.Encodable"},"doc://VHDLParsing/documentation/VHDLParsing/AsynchronousStatement/comment(value:)":{"url":"\/documentation\/vhdlparsing\/asynchronousstatement\/comment(value:)","title":"AsynchronousStatement.comment(value:)","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousStatement\/comment(value:)","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"comment"},{"text":"(","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Comment","preciseIdentifier":"s:11VHDLParsing7CommentV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"A comment, e.g. "},{"type":"codeVoice","code":"-- This is a comment."},{"type":"text","text":"."}],"role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/ComponentInstantiation":{"url":"\/documentation\/vhdlparsing\/componentinstantiation","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComponentInstantiation"}],"type":"topic","title":"ComponentInstantiation","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ComponentInstantiation"}],"abstract":[{"text":"A component instantiation in ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":".","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ComponentInstantiation","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/ForGenerate":{"kind":"symbol","abstract":[{"type":"text","text":"A generate expression utilising a "},{"code":"For","type":"codeVoice"},{"type":"text","text":" loop."}],"role":"symbol","navigatorTitle":[{"text":"ForGenerate","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ForGenerate","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForGenerate","kind":"identifier"}],"type":"topic","title":"ForGenerate","url":"\/documentation\/vhdlparsing\/forgenerate"},"doc://VHDLParsing/documentation/VHDLParsing/AsynchronousStatement/assignment(name:value:)":{"kind":"symbol","abstract":[{"type":"text","text":"Assigning a value to a variable that has been pre-defined, e.g. "},{"type":"codeVoice","code":"a <= b + 1;"},{"type":"text","text":"."}],"role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousStatement\/assignment(name:value:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"assignment"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11VHDLParsing17VariableReferenceO","kind":"typeIdentifier","text":"VariableReference"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AsynchronousExpression","kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing22AsynchronousExpressionO"},{"text":")","kind":"text"}],"type":"topic","title":"AsynchronousStatement.assignment(name:value:)","url":"\/documentation\/vhdlparsing\/asynchronousstatement\/assignment(name:value:)"},"doc://VHDLParsing/documentation/VHDLParsing/AsynchronousBlock":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousBlock","title":"AsynchronousBlock","url":"\/documentation\/vhdlparsing\/asynchronousblock","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsynchronousBlock"}],"navigatorTitle":[{"kind":"identifier","text":"AsynchronousBlock"}],"abstract":[{"text":"A block of code that exists within an architecture body.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/WhenElseStatement":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/WhenElseStatement","title":"WhenElseStatement","url":"\/documentation\/vhdlparsing\/whenelsestatement","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhenElseStatement"}],"navigatorTitle":[{"kind":"identifier","text":"WhenElseStatement"}],"abstract":[{"text":"A type for representing asynchronous ","type":"text"},{"type":"codeVoice","code":"when"},{"text":" statements with an ","type":"text"},{"type":"codeVoice","code":"else"},{"text":" clause.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/AsynchronousStatement":{"kind":"symbol","abstract":[{"type":"text","text":"A statement that can exist within asynchronous code."}],"role":"symbol","navigatorTitle":[{"text":"AsynchronousStatement","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousStatement","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsynchronousStatement","kind":"identifier"}],"type":"topic","title":"AsynchronousStatement","url":"\/documentation\/vhdlparsing\/asynchronousstatement"},"doc://VHDLParsing/documentation/VHDLParsing/PortMap":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/PortMap","title":"PortMap","url":"\/documentation\/vhdlparsing\/portmap","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PortMap"}],"navigatorTitle":[{"kind":"identifier","text":"PortMap"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"port map"},{"text":" declaration in ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":".","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/AsynchronousStatement/init(rawValue:)":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":")"}],"type":"topic","kind":"symbol","url":"\/documentation\/vhdlparsing\/asynchronousstatement\/init(rawvalue:)","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousStatement\/init(rawValue:)","title":"init(rawValue:)","abstract":[{"type":"text","text":"Creates a statement from the "},{"type":"codeVoice","code":"VHDL"},{"type":"text","text":" code that performs it."}]},"doc://VHDLParsing/SQ":{"identifier":"doc:\/\/VHDLParsing\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://VHDLParsing/documentation/VHDLParsing":{"kind":"symbol","url":"\/documentation\/vhdlparsing","abstract":[],"role":"collection","title":"VHDLParsing","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing","type":"topic"},"doc://VHDLParsing/SH":{"identifier":"doc:\/\/VHDLParsing\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://VHDLParsing/documentation/VHDLParsing/AsynchronousStatement/RawRepresentable-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/AsynchronousStatement\/RawRepresentable-Implementations","abstract":[],"title":"RawRepresentable Implementations","url":"\/documentation\/vhdlparsing\/asynchronousstatement\/rawrepresentable-implementations"}}}