{"seeAlsoSections":[{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BinaryOperation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ComparisonOperation","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ConditionalExpression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CustomFunctionCall","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/DirectReference","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/EdgeCondition","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCall","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCallable","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedVector","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MathRealFunctionCalls","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Statement","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableAssignment","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableReference","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorIndex","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorSize"],"generated":true,"title":"Basic Arithmetic"}],"identifier":{"url":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess","interfaceLanguage":"swift"},"metadata":{"title":"MemberAccess","navigatorTitle":[{"text":"MemberAccess","kind":"identifier"}],"roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:11VHDLParsing12MemberAccessV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MemberAccess","kind":"identifier"}],"modules":[{"name":"VHDLParsing"}]},"hierarchy":{"paths":[["doc:\/\/VHDLParsing\/documentation\/VHDLParsing"]]},"sections":[],"abstract":[{"type":"text","text":"An expression accessing a member within a record instance."}],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/VHDLParsing\/Se","doc:\/\/VHDLParsing\/SE","doc:\/\/VHDLParsing\/SQ","doc:\/\/VHDLParsing\/SH","doc:\/\/VHDLParsing\/SY","doc:\/\/VHDLParsing\/s8SendableP"],"kind":"relationships","title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MemberAccess","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"This type correctly parses the ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":" that","type":"text"},{"text":" ","type":"text"},{"text":"is used to access a member within a record. For example, consider the record ","type":"text"},{"type":"codeVoice","code":"foo"},{"text":" with the member ","type":"text"},{"type":"codeVoice","code":"bar"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"The ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":" code to access this member would be ","type":"text"},{"type":"codeVoice","code":"foo.bar"},{"text":". This type correctly parses this code and stores","type":"text"},{"text":" ","type":"text"},{"text":"the record and member as separate properties of this struct. If this ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":" is parsed by this type, i.e.","type":"text"},{"text":" ","type":"text"},{"text":"by using ","type":"text"},{"type":"codeVoice","code":"MemberAccess(rawValue: \"foo.bar\")"},{"text":", then the ","type":"text"},{"type":"codeVoice","code":"record"},{"text":" property will be ","type":"text"},{"type":"codeVoice","code":"foo"},{"text":" and the ","type":"text"},{"type":"codeVoice","code":"member"},{"text":" ","type":"text"},{"text":"property will be ","type":"text"},{"type":"codeVoice","code":"bar"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This type also supports chaining member access as the member property is a","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/DirectReference"},{"text":". For example, consider the record ","type":"text"},{"code":"foo","type":"codeVoice"},{"text":" with the member ","type":"text"},{"code":"bar","type":"codeVoice"},{"text":" which is a record with","type":"text"},{"text":" ","type":"text"},{"text":"the member ","type":"text"},{"code":"baz","type":"codeVoice"},{"text":". The ","type":"text"},{"code":"VHDL","type":"codeVoice"},{"text":" code to access this member would be ","type":"text"},{"code":"foo.bar.baz","type":"codeVoice"},{"text":". This type will store","type":"text"},{"text":" ","type":"text"},{"code":"foo","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"record","type":"codeVoice"},{"text":" property and ","type":"text"},{"code":"bar.baz","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"member","type":"codeVoice"},{"text":" property as a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/DirectReference"},{"text":" instance.","type":"text"}],"type":"paragraph"},{"content":[{"inlineContent":[{"text":"","type":"text"},{"type":"reference","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/DirectReference","isActive":true},{"text":", ","type":"text"},{"type":"reference","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableName","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}],"name":"See Also","type":"aside","style":"note"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/vhdlparsing\/memberaccess"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess\/init(rawValue:)","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess\/init(record:member:)"],"title":"Initializers"},{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess\/member","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess\/rawValue","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess\/record"],"title":"Instance Properties"},{"identifiers":["doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess\/Equatable-Implementations","doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess\/RawRepresentable-Implementations"],"generated":true,"title":"Default Implementations"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://VHDLParsing/documentation/VHDLParsing/VectorSize":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VectorSize","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"VectorSize","kind":"identifier"}],"type":"topic","title":"VectorSize","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorSize","abstract":[{"text":"A type for representing VHDL vector sizes.","type":"text"}],"url":"\/documentation\/vhdlparsing\/vectorsize"},"doc://VHDLParsing/documentation/VHDLParsing/MemberAccess/init(record:member:)":{"role":"symbol","type":"topic","title":"init(record:member:)","url":"\/documentation\/vhdlparsing\/memberaccess\/init(record:member:)","kind":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess\/init(record:member:)","abstract":[{"text":"Creates a new instance of this type with the given record and member.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"record","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"VariableName","preciseIdentifier":"s:11VHDLParsing12VariableNameV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"member","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DirectReference","preciseIdentifier":"s:11VHDLParsing15DirectReferenceO","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://VHDLParsing/documentation/VHDLParsing/SignalType":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"SignalType","kind":"identifier"}],"title":"SignalType","kind":"symbol","navigatorTitle":[{"text":"SignalType","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalType","role":"symbol","type":"topic","abstract":[{"text":"Valid VHDL Signal types.","type":"text"}],"url":"\/documentation\/vhdlparsing\/signaltype"},"doc://VHDLParsing/documentation/VHDLParsing":{"kind":"symbol","url":"\/documentation\/vhdlparsing","abstract":[],"role":"collection","title":"VHDLParsing","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/VariableAssignment":{"title":"VariableAssignment","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableAssignment","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VariableAssignment","kind":"identifier"}],"abstract":[{"text":"A variable assignment exists within a port map and is used to assign a port to a variable.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"VariableAssignment","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/variableassignment","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/IndexedVector":{"title":"IndexedVector","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedVector","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IndexedVector","kind":"identifier"}],"abstract":[{"text":"A type for representing vector literals that assign specific bit\/logic values to specific indices.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"IndexedVector","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/indexedvector","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/MemberAccess/init(rawValue:)":{"kind":"symbol","abstract":[{"type":"text","text":"Creates a new instance of this type by parsing the given "},{"code":"VHDL","type":"codeVoice"},{"type":"text","text":" code."}],"role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess\/init(rawValue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","title":"init(rawValue:)","url":"\/documentation\/vhdlparsing\/memberaccess\/init(rawvalue:)"},"doc://VHDLParsing/s8SendableP":{"identifier":"doc:\/\/VHDLParsing\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://VHDLParsing/documentation/VHDLParsing/MemberAccess/rawValue":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"type":"topic","kind":"symbol","title":"rawValue","url":"\/documentation\/vhdlparsing\/memberaccess\/rawvalue","abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":" code that represents this member access.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess\/rawValue"},"doc://VHDLParsing/documentation/VHDLParsing/BinaryOperation":{"url":"\/documentation\/vhdlparsing\/binaryoperation","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"BinaryOperation","kind":"identifier"}],"type":"topic","title":"BinaryOperation","kind":"symbol","navigatorTitle":[{"text":"BinaryOperation","kind":"identifier"}],"abstract":[{"text":"A type for representing arithmetic operations that work with two operands.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BinaryOperation","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/MemberAccess/RawRepresentable-Implementations":{"kind":"article","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess\/RawRepresentable-Implementations","type":"topic","title":"RawRepresentable Implementations","url":"\/documentation\/vhdlparsing\/memberaccess\/rawrepresentable-implementations"},"doc://VHDLParsing/documentation/VHDLParsing/VectorIndex":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"VectorIndex"}],"title":"VectorIndex","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"VectorIndex"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VectorIndex","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An index of a vector in "},{"type":"codeVoice","code":"VHDL"},{"type":"text","text":"."}],"url":"\/documentation\/vhdlparsing\/vectorindex"},"doc://VHDLParsing/documentation/VHDLParsing/EdgeCondition":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EdgeCondition","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"EdgeCondition","kind":"identifier"}],"type":"topic","title":"EdgeCondition","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/EdgeCondition","abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ConditionalExpression","isActive":true,"type":"reference"},{"text":" that checks for the presence of a clocks edge.","type":"text"}],"url":"\/documentation\/vhdlparsing\/edgecondition"},"doc://VHDLParsing/documentation/VHDLParsing/FunctionCallable":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCallable","title":"FunctionCallable","url":"\/documentation\/vhdlparsing\/functioncallable","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FunctionCallable"}],"navigatorTitle":[{"kind":"identifier","text":"FunctionCallable"}],"abstract":[{"text":"Helper protocol for defining types that can be executed as a function call.","type":"text"}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/Statement":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Statement","title":"Statement","url":"\/documentation\/vhdlparsing\/statement","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Statement","kind":"identifier"}],"navigatorTitle":[{"text":"Statement","kind":"identifier"}],"abstract":[{"type":"text","text":"A statement is a a full operation that contains expressions that resolve to some value or logic that is"},{"text":" ","type":"text"},{"type":"text","text":"performed."}],"kind":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/MathRealFunctionCalls":{"url":"\/documentation\/vhdlparsing\/mathrealfunctioncalls","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MathRealFunctionCalls"}],"type":"topic","title":"MathRealFunctionCalls","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MathRealFunctionCalls"}],"abstract":[{"text":"A function call where the function being called exists within the ","type":"text"},{"type":"codeVoice","code":"math_real"},{"text":" package.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MathRealFunctionCalls","role":"symbol"},"doc://VHDLParsing/SQ":{"identifier":"doc:\/\/VHDLParsing\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://VHDLParsing/documentation/VHDLParsing/IndexedValue":{"navigatorTitle":[{"kind":"identifier","text":"IndexedValue"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/indexedvalue","abstract":[{"text":"This type represents a value for a specific index in a vector type within ","type":"text"},{"code":"VHDL","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","title":"IndexedValue","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IndexedValue"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/IndexedValue","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/FunctionCall":{"title":"FunctionCall","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/FunctionCall","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"FunctionCall"}],"abstract":[{"text":"This type represents ","type":"text"},{"type":"codeVoice","code":"VHDL"},{"text":" code that is enacting a function call.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FunctionCall"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/functioncall","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/CastOperation":{"kind":"symbol","role":"symbol","url":"\/documentation\/vhdlparsing\/castoperation","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CastOperation","abstract":[{"text":"A cast operation converting an expression to a specific ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/SignalType"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CastOperation"}],"type":"topic","title":"CastOperation","navigatorTitle":[{"kind":"identifier","text":"CastOperation"}]},"doc://VHDLParsing/documentation/VHDLParsing/BooleanExpression":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BooleanExpression"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BooleanExpression"}],"type":"topic","title":"BooleanExpression","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/BooleanExpression","abstract":[{"type":"text","text":"A boolean expression containing common boolean operations."}],"url":"\/documentation\/vhdlparsing\/booleanexpression"},"doc://VHDLParsing/SH":{"identifier":"doc:\/\/VHDLParsing\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://VHDLParsing/SE":{"identifier":"doc:\/\/VHDLParsing\/SE","type":"unresolvable","title":"Swift.Encodable"},"doc://VHDLParsing/documentation/VHDLParsing/MemberAccess/Equatable-Implementations":{"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess\/Equatable-Implementations","title":"Equatable Implementations","role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/vhdlparsing\/memberaccess\/equatable-implementations","abstract":[]},"doc://VHDLParsing/documentation/VHDLParsing/VariableReference":{"navigatorTitle":[{"text":"VariableReference","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/variablereference","abstract":[{"text":"A type for defining types of references to a variable.","type":"text"}],"role":"symbol","title":"VariableReference","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"VariableReference","kind":"identifier"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableReference","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/ConditionalExpression":{"url":"\/documentation\/vhdlparsing\/conditionalexpression","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConditionalExpression"}],"type":"topic","title":"ConditionalExpression","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ConditionalExpression"}],"abstract":[{"text":"A type for representing expression that can be used in a conditional statement.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ConditionalExpression","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/MemberAccess/record":{"kind":"symbol","abstract":[{"type":"text","text":"The name of the record the "},{"type":"codeVoice","code":"member"},{"type":"text","text":" belongs too."}],"role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess\/record","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"record"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11VHDLParsing12VariableNameV","kind":"typeIdentifier","text":"VariableName"}],"type":"topic","title":"record","url":"\/documentation\/vhdlparsing\/memberaccess\/record"},"doc://VHDLParsing/documentation/VHDLParsing/VariableName":{"kind":"symbol","role":"symbol","url":"\/documentation\/vhdlparsing\/variablename","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableName","abstract":[{"text":"Valid VHDL variable names.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"VariableName","kind":"identifier"}],"type":"topic","title":"VariableName","navigatorTitle":[{"text":"VariableName","kind":"identifier"}]},"doc://VHDLParsing/SY":{"identifier":"doc:\/\/VHDLParsing\/SY","type":"unresolvable","title":"Swift.RawRepresentable"},"doc://VHDLParsing/documentation/VHDLParsing/Expression":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Expression"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Expression"}],"type":"topic","title":"Expression","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/Expression","abstract":[{"text":"An ","type":"text"},{"code":"Expression","type":"codeVoice"},{"text":" represents a stand-alone statement that resolves to some value in ","type":"text"},{"code":"VHDL","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/vhdlparsing\/expression"},"doc://VHDLParsing/documentation/VHDLParsing/MemberAccess":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MemberAccess"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MemberAccess"}],"type":"topic","title":"MemberAccess","role":"symbol","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess","abstract":[{"type":"text","text":"An expression accessing a member within a record instance."}],"url":"\/documentation\/vhdlparsing\/memberaccess"},"doc://VHDLParsing/documentation/VHDLParsing/VariableMap":{"url":"\/documentation\/vhdlparsing\/variablemap","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"VariableMap","kind":"identifier"}],"type":"topic","title":"VariableMap","kind":"symbol","navigatorTitle":[{"text":"VariableMap","kind":"identifier"}],"abstract":[{"text":"An operation that maps 2 signals together.","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/VariableMap","role":"symbol"},"doc://VHDLParsing/documentation/VHDLParsing/DirectReference":{"navigatorTitle":[{"kind":"identifier","text":"DirectReference"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/directreference","abstract":[{"type":"text","text":"A direct reference is a reference to a variable via it’s name or member access in a record type."}],"role":"symbol","title":"DirectReference","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DirectReference"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/DirectReference","type":"topic"},"doc://VHDLParsing/documentation/VHDLParsing/CustomFunctionCall":{"title":"CustomFunctionCall","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/CustomFunctionCall","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomFunctionCall"}],"abstract":[{"type":"text","text":"A custom function call."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CustomFunctionCall"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/customfunctioncall","type":"topic"},"doc://VHDLParsing/Se":{"identifier":"doc:\/\/VHDLParsing\/Se","type":"unresolvable","title":"Swift.Decodable"},"doc://VHDLParsing/documentation/VHDLParsing/MemberAccess/member":{"role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"member"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DirectReference","preciseIdentifier":"s:11VHDLParsing15DirectReferenceO"}],"type":"topic","kind":"symbol","title":"member","url":"\/documentation\/vhdlparsing\/memberaccess\/member","abstract":[{"text":"The member that is accessed within the ","type":"text"},{"type":"codeVoice","code":"record"},{"text":".","type":"text"}],"identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/MemberAccess\/member"},"doc://VHDLParsing/documentation/VHDLParsing/ComparisonOperation":{"title":"ComparisonOperation","identifier":"doc:\/\/VHDLParsing\/documentation\/VHDLParsing\/ComparisonOperation","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComparisonOperation"}],"abstract":[{"text":"A type for representing VHDL comparison operations.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ComparisonOperation"}],"kind":"symbol","url":"\/documentation\/vhdlparsing\/comparisonoperation","type":"topic"}}}